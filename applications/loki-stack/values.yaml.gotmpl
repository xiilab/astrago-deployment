# Loki Stack Configuration
# Complete logging solution with Loki and Promtail

# Loki Configuration
loki:
  # Loki deployment mode
  deploymentMode: SingleBinary

  # Loki configuration
  loki:
    auth_enabled: false
    
    # Common configuration for single replica
    commonConfig:
      replication_factor: 1
      
    # Storage configuration
    storage:
      type: filesystem
      
    # Limits configuration
    limits_config:
      reject_old_samples: false
      reject_old_samples_max_age: 168h  # 7 days
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32

  # Single binary configuration
  singleBinary:
    replicas: {{ .Values.loki.replicas | default 1 }}
    
    # Resource configuration
    resources:
      limits:
        cpu: {{ .Values.loki.resources.limits.cpu | default "1000m" | quote }}
        memory: {{ .Values.loki.resources.limits.memory | default "2Gi" | quote }}
      requests:
        cpu: {{ .Values.loki.resources.requests.cpu | default "500m" | quote }}
        memory: {{ .Values.loki.resources.requests.memory | default "1Gi" | quote }}
    
    # Persistence configuration
    persistence:
      enabled: {{ .Values.loki.persistence.enabled | default true }}
      size: {{ .Values.loki.persistence.size | default "10Gi" | quote }}
      storageClass: {{ .Values.loki.persistence.storageClass | default "astrago-nfs-csi" | quote }}
      
  # Service configuration
  gateway:
    enabled: false
    
  # Test configuration
  test:
    enabled: false
    
  # Monitoring configuration
  monitoring:
    serviceMonitor:
      enabled: true
      labels:
        release: prometheus
    
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
        
    lokiCanary:
      enabled: false

# Promtail Configuration
promtail:
  # Promtail configuration
  config:
    # Server configuration
    server:
      http_listen_port: 3101
      grpc_listen_port: 0
      
    # Positions configuration
    positions:
      filename: /tmp/positions.yaml
      
    # Limits configuration to handle old logs
    limits_config:
      reject_old_samples: false
      reject_old_samples_max_age: 168h  # 7 days
      
    # Client configuration
    clients:
      - url: http://loki-stack.loki-stack.svc:3100/loki/api/v1/push
        
    # Scrape configuration
    scrape_configs:
      # AstraGo Nginx JSON logs (특별 처리)
      - job_name: astrago-nginx-json
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - astrago
        pipeline_stages:
          - cri: {}
          # JSON 로그 파싱
          - match:
              selector: '{app="nginx", container="nginx"} |~ "access_json.log"'
              stages:
                - json:
                    expressions:
                      timestamp: timestamp
                      remote_addr: remote_addr
                      request_method: request_method
                      request_uri: request_uri
                      status: status
                      body_bytes_sent: body_bytes_sent
                      request_time: request_time
                      upstream_response_time: upstream_response_time
                      upstream_addr: upstream_addr
                      http_user_agent: http_user_agent
                - labels:
                    method: request_method
                    status_code: status
                    upstream: upstream_addr
                - timestamp:
                    source: timestamp
                    format: RFC3339
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: nginx
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: astrago
          - action: replace
            source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node_name
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - action: replace
            source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/nginx/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid]
            target_label: __path__
            
      # Kubernetes pods (일반)
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - cri: {}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_instance
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
            
      # Kubernetes system logs
      - job_name: kubernetes-system
        static_configs:
          - targets:
              - localhost
            labels:
              job: kubernetes-system
              __path__: /var/log/syslog
              
  # DaemonSet configuration
  daemonset:
    enabled: true
    
  # Resource configuration
  resources:
    limits:
      cpu: {{ .Values.promtail.resources.limits.cpu | default "200m" | quote }}
      memory: {{ .Values.promtail.resources.limits.memory | default "256Mi" | quote }}
    requests:
      cpu: {{ .Values.promtail.resources.requests.cpu | default "100m" | quote }}
      memory: {{ .Values.promtail.resources.requests.memory | default "128Mi" | quote }}
      
  # Tolerations for all nodes
  tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
      
  # Node selector
  nodeSelector: {}

  # Priority class
  priorityClassName: ""

  # Service monitor
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
      
  # Extra volumes for log collection
  extraVolumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: positions
      emptyDir: {}
        
  extraVolumeMounts:
    - name: varlog
      mountPath: /var/log
      readOnly: true
    - name: positions
      mountPath: /tmp
      readOnly: false 