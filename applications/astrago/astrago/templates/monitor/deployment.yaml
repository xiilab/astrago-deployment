apiVersion: apps/v1
kind: Deployment
metadata:
  name: astrago-backend-monitor
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: astrago-backend-monitor
spec:
  {{- if not .Values.monitor.autoscaling.enabled }}
  replicas: {{ .Values.monitor.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: astrago-backend-monitor
  template:
    metadata:
      {{- with .Values.monitor.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: astrago-backend-monitor
    spec:
      {{- with .Values.monitor.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}      
      securityContext:
        {{- toYaml .Values.monitor.podSecurityContext | nindent 8 }}
      {{- if .Values.astrago.truststore.enabled }}
      initContainers:
        - name: setup-truststore
          image: "{{ default .Values.monitor.image.registry .Values.global.imageRegistry }}/{{ .Values.monitor.image.repository }}:{{ .Values.monitor.image.tag }}"
          command: ["/bin/bash"]
          args:
            - -c
            - |
              echo "Setting up truststore with TLS certificate..."
              cp $JAVA_HOME/lib/security/cacerts /opt/truststore/cacerts
              echo "Importing TLS certificate: astrago-cert"
              keytool -import -alias astrago-cert -file /tmp/certs/tls.crt -keystore /opt/truststore/cacerts -storepass changeit -noprompt
              echo "TLS certificate imported successfully"
          volumeMounts:
            - name: truststore
              mountPath: /opt/truststore
            - name: {{ .Values.astrago.tls.secretName | default "astrago-tls-secret" }}
              mountPath: /tmp/certs
      {{- else }}
      {{- with .Values.monitor.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.monitor.securityContext | nindent 12 }}
          image: "{{ default .Values.monitor.image.registry .Values.global.imageRegistry }}/{{ .Values.monitor.image.repository }}:{{ .Values.monitor.image.tag }}"            
          env:
          {{- range $key, $obj := .Values.monitor.env }}
          - name: {{ $obj.name }}
            value: {{ $obj.value | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.monitor.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.monitor.resources | nindent 12 }}
      {{- if .Values.astrago.truststore.enabled }}
      volumes:
        - name: truststore
          emptyDir: {}
        - name: {{ .Values.astrago.tls.secretName | default "astrago-tls-secret" }}
          secret:
            secretName: {{ .Values.astrago.tls.secretName | default "astrago-tls-secret" }}
      {{- end }}
      {{- with .Values.monitor.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitor.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitor.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}