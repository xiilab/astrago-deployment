core:
  replicaCount: 3
  image:
    repository: "{{ .Values.astrago.core.repository }}"
    tag: "{{ .Values.astrago.core.imageTag }}"
  env:
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}/realms/{{ .Values.astrago.keycloak.realm }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
  existingClaim: "{{ .Values.astrago.createVolume.workloadLog.name }}"

batch:
  image:
    repository: "{{ .Values.astrago.batch.repository }}"
    tag: "{{ .Values.astrago.batch.imageTag }}"
  env:
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}/realms/{{ .Values.astrago.keycloak.realm }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
  existingClaim: "{{ .Values.astrago.createVolume.workloadLog.name }}"

monitor:
  image:
    repository: "{{ .Values.astrago.monitor.repository }}"
    tag: "{{ .Values.astrago.monitor.imageTag }}" 
  env:
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    - name: SPRING_MVC_PATHMATCH_MATCHING-STRATEGY
      value: ant_path_matcher
    - name: PROMETHEUS_URL
      value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090

frontend:
  image:
    repository: "{{ .Values.astrago.frontend.repository }}"
    pullPolicy: Always
    tag: "{{ .Values.astrago.frontend.imageTag }}" 
  env:
    - name: KEYCLOAK_HOST
      value: http://{{ .Values.common.externalIP }}:{{ .Values.keycloak.servicePort }}
    - name: KEYCLOAK_REALME
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_CLIENT_ID
      value: {{ .Values.astrago.keycloak.client }}
    - name: AUTH_CLIENT_SECRET
      value: {{ .Values.astrago.keycloak.clientSecret }}
    - name: NODE_OPTIONS
      value: "--max-http-header-size=41960"
    - name: NEXTAUTH_URL
      value: http://{{ .Values.common.externalIP }}:{{ .Values.astrago.servicePort }}
    - name: NEXTAUTH_SECRET
      value: uuNj1L0Yg2xKcBPVp7yOVlm2nigL3hoHOzbwQXAwx1I=
    - name: NEXT_PUBLIC_API_URL
      value: http://astrago-backend-core:8080
    - name: NEXT_PUBLIC_MONITOR_API_URL
      value: http://astrago-backend-monitor:8080
    - name: NEXT_PUBLIC_PREDICTION_API_URL
      value: http://astrago-time-prediction:8000
    - name: NEXT_PUBLIC_BATCH_API_URL
      value: http://astrago-backend-batch:8080
    - name: NEXT_PUBLIC_API_MOCKING
      value: disabled
    - name: NEXT_PUBLIC_WEBSOCKET_HOST
      value: http://astrago-backend-core:8080
  service:
    type: NodePort
    nodePort: {{ .Values.astrago.servicePort  }}

mariadb:
  auth:
    rootPassword: {{ .Values.astrago.mariadb.rootPassword }}
    database: astrago
    username: {{ .Values.astrago.mariadb.username }}
    password: {{ .Values.astrago.mariadb.password }}
  primary:
    service:
      type: NodePort
    persistence:
      existingClaim: {{ .Values.astrago.createVolume.mariadb.name }} 

createVolume:
  mariadb:
    enabled: "{{ .Values.astrago.createVolume.mariadb.enabled }}"
    name: "{{ .Values.astrago.createVolume.mariadb.name }}"
    size: "{{ .Values.astrago.createVolume.mariadb.size }}"
    accessModes:
    - ReadWriteOnce
    volumeType: "{{ .Values.astrago.createVolume.mariadb.volumeType }}"
    nfs:
      server: "{{ .Values.astrago.createVolume.mariadb.nfs.server }}"
      path: "{{ .Values.astrago.createVolume.mariadb.nfs.path }}"

  workloadLog:
    enabled: "{{ .Values.astrago.createVolume.workloadLog.enabled }}"
    name: "{{ .Values.astrago.createVolume.workloadLog.name }}"
    size: "{{ .Values.astrago.createVolume.workloadLog.size }}"
    accessModes:
    - ReadWriteOnce
    volumeType: "{{ .Values.astrago.createVolume.workloadLog.volumeType }}"
    nfs:
      server: "{{ .Values.astrago.createVolume.workloadLog.nfs.server }}"
      path: "{{ .Values.astrago.createVolume.workloadLog.nfs.path }}"
