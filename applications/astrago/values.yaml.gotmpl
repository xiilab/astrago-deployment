global:
  imageRegistry: "{{ .Values.offline.registry | default "" }}"

core:
  replicaCount: 3
  image:
    registry: "{{ .Values.astrago.core.registry }}"
    repository: "{{ .Values.astrago.core.repository }}"
    tag: "{{ .Values.astrago.core.imageTag }}"
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}/realms/{{ .Values.astrago.keycloak.realm }}
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
      {{ end }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ end }}
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/
      {{ end }}
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
    - name: PROMETHEUS_URL
      value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
    - name: ASTRAGO_PRIVATE-REGISTRY-URL
      value: "{{ .Values.offline.registry | default "" }}" 
    - name: HARBOR_URL
      value: {{ .Values.externalIP }}:{{ .Values.harbor.servicePort | default "30002" }}
    - name: HARBOR_ID
      value: "admin"
    - name: HARBOR_PASSWORD
      value: "{{ .Values.harbor.adminPassword | default "Harbor12345" }}"
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "10"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "30"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
    # SSL truststore 설정 (astrago-deployment 방식 적용)
    - name: JAVA_OPTS
      value: "-Djavax.net.ssl.trustStore=/opt/truststore/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
  # truststore volume 및 init container
  initContainers:
    - name: setup-truststore
      image: openjdk:11-jre-slim
      command: ["/bin/bash"]
      args:
        - -c
        - |
          cp $JAVA_HOME/lib/security/cacerts /opt/truststore/cacerts
          keytool -import -alias keycloak-cert -file /tmp/certs/keycloak-cert.pem -keystore /opt/truststore/cacerts -storepass changeit -noprompt
          echo "Certificate imported successfully"
      volumeMounts:
        - name: truststore
          mountPath: /opt/truststore
        - name: keycloak-cert
          mountPath: /tmp/certs
  volumes:
    - name: truststore
      emptyDir: {}
    - name: keycloak-cert
      secret:
        secretName: keycloak-cert
  volumeMounts:
    - name: truststore
      mountPath: /opt/truststore
batch:
  image:
    registry: "{{ .Values.astrago.batch.registry }}"
    repository: "{{ .Values.astrago.batch.repository }}"
    tag: "{{ .Values.astrago.batch.imageTag }}"
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "5"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "20"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}/realms/{{ .Values.astrago.keycloak.realm }}
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
      {{ end }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
      {{ end }}
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/
      {{ end }}
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
    - name: ASTRAGO_PRIVATE-REGISTRY-URL
      value: "{{ .Values.offline.registry | default "" }}"
    - name: HARBOR_URL
      value: {{ .Values.externalIP }}:{{ .Values.harbor.servicePort | default "30002" }}
    - name: HARBOR_ID
      value: "admin"
    - name: HARBOR_PASSWORD
      value: "{{ .Values.harbor.adminPassword | default "Harbor12345" }}"

monitor:
  image:
    registry: "{{ .Values.astrago.monitor.registry }}"
    repository: "{{ .Values.astrago.monitor.repository }}"
    tag: "{{ .Values.astrago.monitor.imageTag }}" 
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "3"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "10"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
    - name: SPRING_MVC_PATHMATCH_MATCHING-STRATEGY
      value: ant_path_matcher
    - name: PROMETHEUS_URL
      value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090

frontend:
  image:
    registry: "{{ .Values.astrago.frontend.registry }}"
    repository: "{{ .Values.astrago.frontend.repository }}"
    pullPolicy: Always
    tag: "{{ .Values.astrago.frontend.imageTag }}" 
  env:
    - name: KEYCLOAK_HOST
      {{ if .Values.astrago.keycloak.externalKeycloakUrl }}
      value: {{ .Values.astrago.keycloak.externalKeycloakUrl }}
      {{ else if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}/auth/
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}/auth/
      {{ end }}
    - name: KEYCLOAK_REALME
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_CLIENT_ID
      value: {{ .Values.astrago.keycloak.client }}
    - name: AUTH_CLIENT_SECRET
      value: {{ .Values.astrago.keycloak.clientSecret }}
    - name: NODE_OPTIONS
      value: "--max-http-header-size=41960"
    - name: NEXTAUTH_URL
      {{ if .Values.astrago.proxyUrl }}
      value: {{ .Values.astrago.proxyUrl }}
      {{ else }}
      value: http://{{ .Values.externalIP }}:{{ .Values.astrago.servicePort }}
      {{ end }}
    - name: NEXTAUTH_SECRET
      value: uuNj1L0Yg2xKcBPVp7yOVlm2nigL3hoHOzbwQXAwx1I=
    - name: NEXT_PUBLIC_API_URL
      value: http://astrago-backend-core:8080
    - name: NEXT_PUBLIC_MONITOR_API_URL
      value: http://astrago-backend-monitor:8080
    - name: NEXT_PUBLIC_PREDICTION_API_URL
      value: http://astrago-time-prediction:8000
    - name: NEXT_PUBLIC_BATCH_API_URL
      value: http://astrago-backend-batch:8080
    - name: NEXT_PUBLIC_API_MOCKING
      value: disabled
    - name: NEXT_PUBLIC_WEBSOCKET_HOST
      value: http://astrago-backend-core:8080
    - name: NODE_TLS_REJECT_UNAUTHORIZED
      value: '0'    
    - name: NEXT_PUBLIC_ONEVIEW_ENABLED
      value: {{ .Values.astrago.oneview.enabled }} 
    - name : NEXT_PUBLIC_ONLYADMIN_ENABLE
      value: true

proxy:
  service:
    type: NodePort
    nodePort: {{ .Values.astrago.servicePort  }}

mariadb:
  auth:
    rootPassword: {{ .Values.astrago.mariadb.rootPassword }}
    database: astrago
    username: {{ .Values.astrago.mariadb.username }}
    password: {{ .Values.astrago.mariadb.password }}
  primary:
    service:
      type: NodePort
      nodePorts: 
        mysql: 30010
    persistence:
      storageClass: "{{ .Values.nfs.storageClassName }}"

    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      datadir=/bitnami/mariadb/data
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      long_query_time=10.0
      # 연결 최적화 설정
      interactive_timeout = 3600
      wait_timeout = 1800  # 30분으로 단축
      max_connections = 200  # 연결 수 제한
      connect_timeout = 30
      # 연결 풀 최적화
      thread_cache_size = 50
      query_cache_type = 1
      query_cache_size = 64M
      slow_query_log = 1

      #mysql logging
      log-bin=/opt/bitnami/mariadb/logs/mysql_bin
      #server-id=1
      binlog_format=STATEMENT
      expire_logs_days=7
      binlog_checksum=NONE
      binlog_row_image=FULL
      
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

nfs:
  size: 10Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.nfs.storageClassName }}
