apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "timescaledb.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "timescaledb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "timescaledb.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "timescaledb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "timescaledb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-chmod-data
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - sh
            - -c
            - |
              chown -R postgres:postgres /var/lib/postgresql/data
              chmod 700 /var/lib/postgresql/data
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- end }}
          securityContext:
            runAsUser: 0
      containers:
        - name: timescaledb
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "timescaledb.fullname" . }}
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "timescaledb.fullname" . }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "timescaledb.fullname" . }}
                  key: password
            {{- if .Values.auth.enableSuperuser }}
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "timescaledb.fullname" . }}
                  key: postgres-password
            {{- end }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          command:
            - docker-entrypoint.sh
            - postgres
            - -c
            - config_file=/etc/postgresql/postgresql.conf
            - -c
            - hba_file=/etc/postgresql/pg_hba.conf
          volumeMounts:
            - name: config
              mountPath: /etc/postgresql
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "timescaledb.fullname" . }}-config
            items:
              - key: postgresql.conf
                path: postgresql.conf
              - key: pg_hba.conf
                path: pg_hba.conf
        - name: init-scripts
          configMap:
            name: {{ include "timescaledb.fullname" . }}-config
            items:
              - key: init-timescaledb.sql
                path: init-timescaledb.sql
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }} 