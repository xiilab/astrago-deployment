gpu-operator:
  validator:
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: gpu-operator-validator
    # version: ""
  operator:
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
    image: gpu-operator  
    # version: ""    
    initContainer:
      image: cuda
      repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
      version: 12.4.1-base-ubi8      

  dcgmExporter:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/k8s"
    image: dcgm-exporter
    version: 3.3.8-3.6.0-ubuntu22.04
    imagePullPolicy: IfNotPresent
    config:
      name: metrics-config
    env:
      - name: DCGM_EXPORTER_LISTEN
        value: ":9400"
      - name: DCGM_EXPORTER_KUBERNETES
        value: "true"
      - name: DCGM_EXPORTER_COLLECTORS
        value: "/etc/dcgm-exporter/dcgm-metrics.csv"

  dcgm:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/k8s"
    image: dcgm
    version: 3.3.8-1-ubuntu22.04
    imagePullPolicy: IfNotPresent

  driver:
    enabled: false
    # kernelModuleType 파라미터 (useOpenKernelModules 대체)
    kernelModuleType: auto
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
    image: driver
    # version: ""
    imagePullPolicy: IfNotPresent
    startupProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60
      failureThreshold: 120

  toolkit:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/k8s"
    image: container-toolkit
    version: v1.17.0-ubuntu20.04
    imagePullPolicy: IfNotPresent

  devicePlugin:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
    image: k8s-device-plugin
    version: v0.17.0-ubi8
    imagePullPolicy: IfNotPresent

  gfd:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
    image: gpu-feature-discovery
    version: v0.17.0-ubi8
    imagePullPolicy: IfNotPresent

  migManager:
    enabled: true
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/k8s"
    image: mig-manager
    version: v0.10.0-ubuntu20.04
    imagePullPolicy: IfNotPresent
    config:
      name: "custom-mig-parted-config"
      default: "all-disabled"
    env:
      - name: WITH_REBOOT
        value: "true"

  nodeStatusExporter:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: gpu-operator-validator
    # version: ""
    imagePullPolicy: IfNotPresent

  gds:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: gds-driver
    version: v2.20.5-535.129.03-ubuntu20.04
    imagePullPolicy: IfNotPresent

  vgpuManager:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: vgpu-device-manager
    version: v0.2.8
    imagePullPolicy: IfNotPresent

  vgpuDeviceManager:
    enabled: false  
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: vgpu-device-manager
    version: v0.2.8
    imagePullPolicy: IfNotPresent

  sandboxDevicePlugin:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia"
    image: kubevirt-gpu-device-plugin
    version: v1.2.10
    imagePullPolicy: IfNotPresent

  kataManager:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: k8s-kata-manager
    version: v0.2.2
    imagePullPolicy: IfNotPresent

  ccManager:
    enabled: false
    repository: "{{ .Values.offline.registry | default "nvcr.io" }}/nvidia/cloud-native"
    image: k8s-cc-manager
    version: v0.1.1
    imagePullPolicy: IfNotPresent

node-feature-discovery:
  master:
    extraLabelNs:
      - nvidia.com
    serviceAccount:
      name: node-feature-discovery
