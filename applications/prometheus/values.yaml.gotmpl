global:
  imageRegistry: "{{ .Values.offline.registry | default "" }}"

alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['nodeName', 'ruleName']
      group_wait: 30s
      #group_interval: 5m
      #repeat_interval: 12h
      group_interval: 2m
      repeat_interval: 1h
      receiver: 'null'
      routes:
      - receiver: 'webhook'
        matchers:
          - app = "uyuni-suite"
    receivers:
    - name: 'null'
    - name: 'webhook'
      webhook_configs:
      - url: 'http://astrago-backend-core.astrago.svc:8080/api/v1/core/alertManager/receive'
    templates:
    - '/etc/alertmanager/config/*.tmpl'  
  service:
    type: NodePort    
      
prometheus:
  service:
    type: NodePort

  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false

    additionalScrapeConfigs: 
    - job_name: gpu-metrics
      scrape_interval: 1s
      metrics_path: /metrics
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - gpu-operator
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: kubernetes_node      
    retention: 1y
    storageSpec:
      volumeClaimTemplate:
        spec:
{{ if .Values.nfs.enabled }}
          storageClassName: "{{ .Values.nfs.storageClassName }}"
{{ else if .Values.local.enabled }}
          storageClassName: "{{ .Values.local.storageClassName }}"
{{ end }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

grafana:          
  service:
    enabled: true
    type: NodePort

