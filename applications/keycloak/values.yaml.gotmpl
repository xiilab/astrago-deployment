#global:
  #imageRegistry: "{{ .Values.offline.registry | default "" }}"

# Use custom Keycloak image with theme
image:
  repository: {{ .Values.keycloak.image.repository | default "xiilab/astrago-keycloak-theme" }}
  tag: {{ .Values.keycloak.image.tag | default .Values.keycloak.themeVersion | default "68de" }}
  pullPolicy: {{ .Values.keycloak.image.pullPolicy | default "Always" }}

proxy: edge
production: true
httpRelativePath: "/auth/"

auth:
  adminUser: "{{ .Values.keycloak.adminUser }}"
  adminPassword: "{{ .Values.keycloak.adminPassword }}"
service:
  type: NodePort
  nodePorts:
    http: "{{ .Values.keycloak.servicePort }}"
    https: "30002"

extraEnvVars:
  - name: KEYCLOAK_EXTRA_ARGS
    value: "--import-realm --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true"

extraVolumes:
  - name: realm-config
    configMap:
      name: realm-config

extraVolumeMounts:
  - name: realm-config
    mountPath: /opt/bitnami/keycloak/data/import

# Note: JAR file is now included in the Docker image itself, no need for wget download

lifecycleHooks:
  postStart:
    exec:
      command:
        - "/bin/bash"
        - "-c"
        - |
          echo "Starting postStart script" > /opt/bitnami/keycloak/poststart.log
          until curl -sSf http://localhost:8080/auth/realms/master > /dev/null; do
            echo "Waiting for Keycloak to be ready..." >> /opt/bitnami/keycloak/poststart.log
            sleep 5
          done
          /opt/bitnami/keycloak/bin/kcadm.sh update realms/master -s sslRequired=NONE --server http://localhost:8080/auth/ --realm master --user admin --password "{{ .Values.keycloak.adminPassword }}" >> /opt/bitnami/keycloak/poststart.log 2>&1

postgresql:
  auth:
    postgresPassword: postgres
    username: bn_keycloak
    password: keycloak
    database: bitnami_keycloak
  primary:
    persistence:
      enabled: true
      storageClass: "{{ .Values.nfs.storageClassName }}"
