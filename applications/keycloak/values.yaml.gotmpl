global:
  imageRegistry: "{{ .Values.offline.registry | default "" }}"

proxy: edge
production: true

auth:
  adminUser: "{{ .Values.keycloak.adminUser }}"
  adminPassword: "{{ .Values.keycloak.adminPassword }}"
service:
  type: NodePort
  nodePorts:
    http: "{{ .Values.keycloak.servicePort }}"
    https: "30002"

extraEnvVars:
  - name: KEYCLOAK_EXTRA_ARGS
    value: "--import-realm --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true"

extraVolumes:
  - name: theme
    emptyDir: {}
  - name: realm-config
    configMap:
      name: realm-config

extraVolumeMounts:
  - name: theme
    mountPath: /opt/bitnami/keycloak/providers/keycloak-theme.jar
    subPath: keycloak-theme.jar
  - name: realm-config
    mountPath: /opt/bitnami/keycloak/data/import

initContainers:
  - name: download-astra-logintheme
    image: "{{ .Values.offline.registry | default "docker.io" }}/jacobcarlborg/docker-alpine-wget"
    command:
      - sh
    args:
      - -c
      - |
       echo "check_certificate = off" >> ~/.wgetrc && wget "{{ .Values.offline.httpServer | default "https://github.com/xiilab/uyuni-login-theme/releases/download" }}/{{ .Values.keycloak.themeVersion }}/keycloak-theme.jar" -P /theme

    volumeMounts:
      - name: theme
        mountPath: /theme

postgresql:
  auth:
    postgresPassword: postgres
    username: bn_keycloak
    password: keycloak
    database: bitnami_keycloak
  primary:
    persistence:
      enabled: true
{{ if .Values.nfs.enabled }}
      storageClass: "{{ .Values.nfs.storageClassName }}"
{{ else if .Values.local.enabled }}
      existingClaim: data-keycloak-postgresql-0
{{ end }}
