global:
  imageRegistry: "{{ .Values.offline.registry | default "" }}"

# Astrago 커스텀 Keycloak 이미지 사용 (Bitnami 22.0.5 기반)
image:
  registry: docker.io
  repository: xiilab/astrago-keycloak-spi-userattribute
  tag: latest
  pullPolicy: Always

proxy: edge
production: true
httpRelativePath: "/auth/"

auth:
  adminUser: "{{ .Values.keycloak.adminUser }}"
  adminPassword: "{{ .Values.keycloak.adminPassword }}"
service:
  type: NodePort
  nodePorts:
    http: "{{ .Values.keycloak.servicePort }}"
    https: "30002"

extraEnvVars:
  - name: KEYCLOAK_EXTRA_ARGS
    value: "--import-realm --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true"

extraVolumes:
  - name: theme
    emptyDir: {}
  - name: realm-config
    configMap:
      name: realm-config

extraVolumeMounts:
  - name: theme
    mountPath: /opt/bitnami/keycloak/providers/keycloak-theme.jar
    subPath: keycloak-theme.jar
  - name: realm-config
    mountPath: /opt/bitnami/keycloak/data/import

initContainers:
  - name: download-astra-logintheme
    image: "{{ .Values.offline.registry | default "docker.io" }}/jacobcarlborg/docker-alpine-wget"
    command:
      - sh
    args:
      - -c
      - |
       echo "check_certificate = off" >> ~/.wgetrc && wget "{{ .Values.offline.httpServer | default "https://github.com/xiilab/uyuni-login-theme/releases" }}/download/{{ .Values.keycloak.themeVersion }}/keycloak-theme.jar" -P /theme

    volumeMounts:
      - name: theme
        mountPath: /theme

lifecycleHooks:
  postStart:
    exec:
      command:
        - "/bin/bash"
        - "-c"
        - |
          echo "Starting postStart script" > /opt/bitnami/keycloak/poststart.log
          timeout=300
          counter=0
          until curl -sSf http://localhost:8080/auth/realms/master > /dev/null || [ $counter -ge $timeout ]; do
            echo "Waiting for Keycloak to be ready... ($counter/$timeout)" >> /opt/bitnami/keycloak/poststart.log
            sleep 5
            counter=$((counter + 5))
          done
          if [ $counter -ge $timeout ]; then
            echo "Timeout waiting for Keycloak to be ready" >> /opt/bitnami/keycloak/poststart.log
            exit 1
          fi
          echo "Keycloak is ready, updating realm settings..." >> /opt/bitnami/keycloak/poststart.log
          /opt/bitnami/keycloak/bin/kcadm.sh update realms/master -s sslRequired=NONE --server http://localhost:8080/auth/ --realm master --user admin --password "{{ .Values.keycloak.adminPassword }}" >> /opt/bitnami/keycloak/poststart.log 2>&1

postgresql:
  auth:
    postgresPassword: postgres
    username: bn_keycloak
    password: keycloak
    database: bitnami_keycloak
  primary:
    persistence:
      enabled: true
      storageClass: "{{ .Values.nfs.storageClassName }}"
