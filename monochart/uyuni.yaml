---
# Source: uyuni/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb
  namespace: "uyuni"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.9
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: uyuni/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mariadb
  namespace: "uyuni"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.9
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "cm9vdA=="
  mariadb-password: "eGlpcm9ja3M="
---
# Source: uyuni/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb
  namespace: "uyuni"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.9
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    interactive_timeout=1803
    wait_timeout=1803
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: uyuni/templates/storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-csi
  namespace: uyuni
provisioner: nfs.csi.k8s.io
parameters:
  server: 10.61.3.2
  share: /kube_storage
  # csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume
  # csi.storage.k8s.io/provisioner-secret-name: "mount-options"
  # csi.storage.k8s.io/provisioner-secret-namespace: "default"
reclaimPolicy: Delete
volumeBindingMode: Immediate
mountOptions:
  - nfsvers=4.1
---
# Source: uyuni/charts/batch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uyuni-backend-batch
  namespace: uyuni
  labels:
    helm.sh/chart: batch-0.1.1
    app.kubernetes.io/name: batch
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: batch
    app.kubernetes.io/instance: uyuni
---
# Source: uyuni/charts/core/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uyuni-backend-core
  namespace: uyuni
  labels:
    helm.sh/chart: core-0.1.1
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: uyuni
---
# Source: uyuni/charts/frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uyuni-frontend
  namespace: uyuni
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: uyuni
---
# Source: uyuni/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  namespace: "uyuni"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.9
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: NodePort
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: 32000
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/component: primary
---
# Source: uyuni/charts/monitor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uyuni-backend-monitor
  namespace: uyuni
  labels:
    helm.sh/chart: monitor-0.1.1
    app.kubernetes.io/name: monitor
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: monitor
    app.kubernetes.io/instance: uyuni
---
# Source: uyuni/charts/batch/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uyuni-backend-batch
  namespace: uyuni
  labels:
    helm.sh/chart: batch-0.1.1
    app.kubernetes.io/name: batch
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: batch
      app.kubernetes.io/instance: uyuni
  template:
    metadata:
      labels:
        app.kubernetes.io/name: batch
        app.kubernetes.io/instance: uyuni
    spec:
      securityContext:
        {}
      containers:
        - name: batch
          securityContext:
            {}
          image: "harbor.xiilab.com:32443/uyuni/server-batch:develop-402c1d4"
          imagePullPolicy: IfNotPresent

          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: uyuni/charts/core/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uyuni-backend-core
  namespace: uyuni
  labels:
    helm.sh/chart: core-0.1.1
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: core
      app.kubernetes.io/instance: uyuni
  template:
    metadata:
      labels:
        app.kubernetes.io/name: core
        app.kubernetes.io/instance: uyuni
    spec:
      securityContext:
        {}
      containers:
        - name: core
          securityContext:
            {}
          image: "harbor.xiilab.com:32443/uyuni/server-core:develop-402c1d4"
          imagePullPolicy: IfNotPresent
          
          env:
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:mariadb://mariadb:3306/uyuni"
          - name: SPRING_DATASOURCE_USERNAME
            value: "uyuni"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "xiirocks"
          - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
            value: "http://10.61.3.8:30001/realms/myrealm"
          - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWK-SET-URI
            value: "http://10.61.3.8:30001/realms/myrealm/protocol/openid-connect/certs"

          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          resources:
            {}
---
# Source: uyuni/charts/frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uyuni-frontend
  namespace: uyuni
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: uyuni
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: uyuni
    spec:
      securityContext:
        {}
      containers:
        - name: frontend
          securityContext:
            {}
          image: "harbor.xiilab.com:32443/uyuni/uyuni-frontend:develop-8a91e28"
          imagePullPolicy: Always
          
          env:
          - name: KEYCLOAK_HOST
            value: "https://10.61.3.8:30002"
          - name: KEYCLOAK_REALME
            value: "myrealm"
          - name: KEYCLOAK_CLIENT_ID
            value: "kubernetes-client"
          - name: AUTH_CLIENT_SECRET
            value: "7bE2Oq2HyKrPsX49EXul0G48O4c4kkFv"
          - name: NEXTAUTH_URL
            value: "http://localhost:3000"
          - name: NEXTAUTH_SECRET
            value: "uuNj1L0Yg2xKcBPVp7yOVlm2nigL3hoHOzbwQXAwx1I="
          - name: NEXT_PUBLIC_API_URL
            value: "http://localhost:4444/"
          
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: uyuni/charts/monitor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uyuni-backend-monitor
  namespace: uyuni
  labels:
    helm.sh/chart: monitor-0.1.1
    app.kubernetes.io/name: monitor
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: monitor
      app.kubernetes.io/instance: uyuni
  template:
    metadata:
      labels:
        app.kubernetes.io/name: monitor
        app.kubernetes.io/instance: uyuni
    spec:
      securityContext:
        {}
      containers:
        - name: monitor
          securityContext:
            {}
          image: "harbor.xiilab.com:32443/uyuni/server-monitor:develop-402c1d4"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: uyuni/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
  namespace: "uyuni"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.9
    app.kubernetes.io/instance: uyuni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: uyuni
      app.kubernetes.io/component: primary
  serviceName: mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: c4b338e2e83abbf552a0a633bc45a2f3ec80d7230ba0583e01198dfa4a40efb9
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-12.2.9
        app.kubernetes.io/instance: uyuni
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: uyuni
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.11.4-debian-11-r46
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "uyuni"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "uyuni"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: uyuni
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: nfs-csi

