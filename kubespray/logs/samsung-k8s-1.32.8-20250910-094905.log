[WARNING]: While constructing a mapping from
/Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kub
espray/roles/bootstrap_os/tasks/main.yml, line 29, column 7, found a duplicate
dict key (paths). Using last defined value only.
[WARNING]: Skipping callback plugin 'ara_default', unable to load

PLAY [Check Ansible version] ***************************************************
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.006)       0:00:00.006 **************** 

TASK [Check 2.16.4 <= Ansible version < 2.17.0] ********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.014)       0:00:00.020 **************** 

TASK [Check that python netaddr is installed] **********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.038)       0:00:00.059 **************** 

TASK [Check that jinja is not too old (install via pip)] ***********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Define groups for legacy less structured inventories] ********************
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.012)       0:00:00.072 **************** 

TASK [Match needed groups by their old names or definition] ********************
changed: [node1] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node1] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node1] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node1] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node1] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
changed: [node2] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node2] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node2] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node2] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node2] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
changed: [node3] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node3] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node3] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node3] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node3] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})

PLAY [Check inventory settings] ************************************************
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.045)       0:00:00.117 **************** 

TASK [validate_inventory : Stop if some versions have a 'v' left at the start] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.040)       0:00:00.158 **************** 

TASK [validate_inventory : Stop if some derived versions have a 'v' left at the start] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.096)       0:00:00.255 **************** 

TASK [validate_inventory : Stop if kube_control_plane group is empty] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.019)       0:00:00.274 **************** 

TASK [validate_inventory : Stop if etcd group is empty in external etcd mode] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.019)       0:00:00.294 **************** 
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.022)       0:00:00.317 **************** 

TASK [validate_inventory : Stop if unsupported version of Kubernetes] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.036)       0:00:00.353 **************** 

TASK [validate_inventory : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.020)       0:00:00.373 **************** 

TASK [validate_inventory : Stop if even number of etcd hosts] ******************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.020)       0:00:00.394 **************** 
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.023)       0:00:00.418 **************** 
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.022)       0:00:00.441 **************** 
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.022)       0:00:00.463 **************** 
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.025)       0:00:00.488 **************** 

TASK [validate_inventory : Check that kube_service_addresses is a network range] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.039)       0:00:00.528 **************** 

TASK [validate_inventory : Check that kube_pods_subnet is a network range] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:06 +0900 (0:00:00.091)       0:00:00.619 **************** 

TASK [validate_inventory : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.116)       0:00:00.736 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.014)       0:00:00.751 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.015)       0:00:00.766 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.014)       0:00:00.781 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.015)       0:00:00.796 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.015)       0:00:00.811 **************** 

TASK [validate_inventory : Stop if unsupported options selected] ***************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.021)       0:00:00.833 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.027)       0:00:00.860 **************** 

TASK [validate_inventory : Stop if etcd_kubeadm_enabled is defined] ************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.018)       0:00:00.879 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.023)       0:00:00.903 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.022)       0:00:00.925 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.023)       0:00:00.949 **************** 

TASK [validate_inventory : Ensure minimum containerd version] ******************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.020)       0:00:00.970 **************** 
[WARNING]: Could not match supplied host pattern, ignoring: bastion

PLAY [Install bastion ssh config] **********************************************
skipping: no hosts matched

PLAY [Bootstrap hosts for Ansible] *********************************************
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.083)       0:00:01.054 **************** 
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap_os : Fetch /etc/os-release] ************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.067)       0:00:01.121 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.042)       0:00:01.164 **************** 

TASK [bootstrap_os : Include tasks] ********************************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/bootstrap_os/tasks/ubuntu.yml for node1, node2, node3 => (item=/Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/bootstrap_os/tasks/ubuntu.yml)
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.053)       0:00:01.217 **************** 

TASK [bootstrap_os : Check if bootstrap is needed] *****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.055)       0:00:01.273 **************** 

TASK [bootstrap_os : Check http::proxy in apt configuration files] *************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.079)       0:00:01.352 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.029)       0:00:01.381 **************** 

TASK [bootstrap_os : Check https::proxy in apt configuration files] ************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.118)       0:00:01.500 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.029)       0:00:01.529 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.024)       0:00:01.554 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.039)       0:00:01.593 **************** 
수요일 10 9월 2025  09:49:07 +0900 (0:00:00.024)       0:00:01.617 **************** 
수요일 10 9월 2025  09:49:08 +0900 (0:00:00.026)       0:00:01.643 **************** 
수요일 10 9월 2025  09:49:08 +0900 (0:00:00.024)       0:00:01.668 **************** 

TASK [system_packages : Gather OS information] *********************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:08 +0900 (0:00:00.862)       0:00:02.530 **************** 
수요일 10 9월 2025  09:49:08 +0900 (0:00:00.028)       0:00:02.559 **************** 
수요일 10 9월 2025  09:49:09 +0900 (0:00:00.069)       0:00:02.628 **************** 
수요일 10 9월 2025  09:49:09 +0900 (0:00:00.025)       0:00:02.654 **************** 

TASK [system_packages : Update package management cache (APT)] *****************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:49:10 +0900 (0:00:01.192)       0:00:03.847 **************** 
수요일 10 9월 2025  09:49:10 +0900 (0:00:00.037)       0:00:03.884 **************** 
수요일 10 9월 2025  09:49:10 +0900 (0:00:00.027)       0:00:03.912 **************** 

TASK [system_packages : Manage packages] ***************************************
ok: [node3] => (item=remove)
ok: [node2] => (item=remove)
ok: [node1] => (item=remove)
ok: [node3] => (item=install)
ok: [node2] => (item=install)
ok: [node1] => (item=install)
수요일 10 9월 2025  09:49:13 +0900 (0:00:02.932)       0:00:06.844 **************** 

TASK [bootstrap_os : Create remote_tmp for it is used by another module] *******
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:13 +0900 (0:00:00.423)       0:00:07.268 **************** 

TASK [bootstrap_os : Gather facts] *********************************************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:14 +0900 (0:00:00.869)       0:00:08.138 **************** 

TASK [bootstrap_os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:49:15 +0900 (0:00:01.036)       0:00:09.175 **************** 

TASK [bootstrap_os : Ensure bash_completion.d folder exists] *******************
ok: [node1]
ok: [node3]
ok: [node2]

PLAY [Gather facts] ************************************************************
수요일 10 9월 2025  09:49:15 +0900 (0:00:00.382)       0:00:09.557 **************** 
수요일 10 9월 2025  09:49:15 +0900 (0:00:00.033)       0:00:09.590 **************** 

TASK [network_facts : Set fallback_ip] *****************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.036)       0:00:09.627 **************** 
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.030)       0:00:09.657 **************** 

TASK [network_facts : Set fallback_ip6] ****************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.034)       0:00:09.692 **************** 

TASK [network_facts : Set main access ip(access_ip based on ipv4_stack/ipv6_stack options).] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.081)       0:00:09.773 **************** 

TASK [network_facts : Set main ip(ip based on ipv4_stack/ipv6_stack options).] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.034)       0:00:09.808 **************** 

TASK [network_facts : Set main access ips(mixed ips for dualstack).] ***********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.036)       0:00:09.845 **************** 

TASK [network_facts : Set main ips(mixed ips for dualstack).] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.035)       0:00:09.880 **************** 
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.014)       0:00:09.894 **************** 
수요일 10 9월 2025  09:49:16 +0900 (0:00:00.035)       0:00:09.930 **************** 

TASK [Gather minimal facts] ****************************************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:17 +0900 (0:00:00.738)       0:00:10.668 **************** 

TASK [Gather necessary facts (network)] ****************************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:17 +0900 (0:00:00.856)       0:00:11.525 **************** 

TASK [Gather necessary facts (hardware)] ***************************************
ok: [node3]
ok: [node2]
ok: [node1]

PLAY [Prepare for etcd install] ************************************************
수요일 10 9월 2025  09:49:19 +0900 (0:00:01.441)       0:00:12.967 **************** 

TASK [adduser : User | Create User Group] **************************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:19 +0900 (0:00:00.372)       0:00:13.340 **************** 

TASK [adduser : User | Create User] ********************************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:20 +0900 (0:00:00.605)       0:00:13.945 **************** 

TASK [kubernetes/preinstall : Check if /etc/fstab exists] **********************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:20 +0900 (0:00:00.433)       0:00:14.379 **************** 

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [node3] => (item=swap)
ok: [node1] => (item=swap)
ok: [node2] => (item=swap)
ok: [node2] => (item=none)
ok: [node1] => (item=none)
ok: [node3] => (item=none)
수요일 10 9월 2025  09:49:21 +0900 (0:00:00.951)       0:00:15.331 **************** 

TASK [kubernetes/preinstall : Mask swap.target (persist swapoff)] **************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:22 +0900 (0:00:00.756)       0:00:16.088 **************** 

TASK [kubernetes/preinstall : Disable swap] ************************************
changed: [node3]
changed: [node2]
changed: [node1]
수요일 10 9월 2025  09:49:22 +0900 (0:00:00.449)       0:00:16.537 **************** 
수요일 10 9월 2025  09:49:22 +0900 (0:00:00.041)       0:00:16.579 **************** 

TASK [kubernetes/preinstall : Check resolvconf] ********************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:23 +0900 (0:00:00.315)       0:00:16.894 **************** 

TASK [kubernetes/preinstall : Check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:23 +0900 (0:00:00.320)       0:00:17.214 **************** 

TASK [kubernetes/preinstall : Check status of /etc/resolv.conf] ****************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:23 +0900 (0:00:00.326)       0:00:17.541 **************** 

TASK [kubernetes/preinstall : Fetch resolv.conf] *******************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:24 +0900 (0:00:00.412)       0:00:17.953 **************** 

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:24 +0900 (0:00:00.348)       0:00:18.301 **************** 

TASK [kubernetes/preinstall : Check systemd-resolved] **************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.353)       0:00:18.655 **************** 

TASK [kubernetes/preinstall : Set default dns if remove_default_searchdomains is false] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.056)       0:00:18.712 **************** 

TASK [kubernetes/preinstall : Set dns facts] ***********************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.105)       0:00:18.818 **************** 

TASK [kubernetes/preinstall : Check if kubelet is configured] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.302)       0:00:19.121 **************** 

TASK [kubernetes/preinstall : Check if early DNS configuration stage] **********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.052)       0:00:19.174 **************** 

TASK [kubernetes/preinstall : Target resolv.conf files] ************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.038)       0:00:19.212 **************** 
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.026)       0:00:19.239 **************** 

TASK [kubernetes/preinstall : Check if /etc/dhclient.conf exists] **************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.300)       0:00:19.539 **************** 
수요일 10 9월 2025  09:49:25 +0900 (0:00:00.038)       0:00:19.578 **************** 

TASK [kubernetes/preinstall : Check if /etc/dhcp/dhclient.conf exists] *********
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.310)       0:00:19.889 **************** 

TASK [kubernetes/preinstall : Target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.051)       0:00:19.941 **************** 
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.077)       0:00:20.019 **************** 

TASK [kubernetes/preinstall : Target dhclient hook file for Debian family] *****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.038)       0:00:20.057 **************** 
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.027)       0:00:20.084 **************** 

TASK [kubernetes/preinstall : Check /usr readonly] *****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.307)       0:00:20.391 **************** 
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.039)       0:00:20.431 **************** 
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.016)       0:00:20.448 **************** 

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.038)       0:00:20.487 **************** 

TASK [kubernetes/preinstall : Stop if the os does not support] *****************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.037)       0:00:20.524 **************** 

TASK [kubernetes/preinstall : Stop if memory is too small for control plane nodes] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:26 +0900 (0:00:00.038)       0:00:20.563 **************** 

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.121)       0:00:20.684 **************** 

TASK [kubernetes/preinstall : Stop if cgroups are not enabled on nodes] ********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.323)       0:00:21.007 **************** 

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.058)       0:00:21.066 **************** 

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.333)       0:00:21.399 **************** 
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.046)       0:00:21.445 **************** 
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.032)       0:00:21.477 **************** 

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.043)       0:00:21.521 **************** 

TASK [kubernetes/preinstall : Stop if /etc/resolv.conf has no configured nameservers] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.062)       0:00:21.583 **************** 
수요일 10 9월 2025  09:49:27 +0900 (0:00:00.026)       0:00:21.609 **************** 

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
ok: [node1] => (item=/etc/kubernetes)
ok: [node2] => (item=/etc/kubernetes)
ok: [node3] => (item=/etc/kubernetes)
ok: [node2] => (item=/etc/kubernetes/manifests)
ok: [node1] => (item=/etc/kubernetes/manifests)
ok: [node3] => (item=/etc/kubernetes/manifests)
ok: [node2] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node3] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node2] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node3] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
수요일 10 9월 2025  09:49:29 +0900 (0:00:01.202)       0:00:22.811 **************** 

TASK [kubernetes/preinstall : Create other directories of root owner] **********
ok: [node1] => (item=/etc/kubernetes/ssl)
ok: [node2] => (item=/etc/kubernetes/ssl)
ok: [node3] => (item=/etc/kubernetes/ssl)
ok: [node3] => (item=/usr/local/bin)
ok: [node1] => (item=/usr/local/bin)
ok: [node2] => (item=/usr/local/bin)
수요일 10 9월 2025  09:49:29 +0900 (0:00:00.652)       0:00:23.464 **************** 

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:30 +0900 (0:00:00.329)       0:00:23.793 **************** 
수요일 10 9월 2025  09:49:30 +0900 (0:00:00.084)       0:00:23.878 **************** 

TASK [kubernetes/preinstall : Create cni directories] **************************
ok: [node1] => (item=/etc/cni/net.d)
ok: [node2] => (item=/etc/cni/net.d)
ok: [node3] => (item=/etc/cni/net.d)
ok: [node1] => (item=/opt/cni/bin)
ok: [node2] => (item=/opt/cni/bin)
ok: [node3] => (item=/opt/cni/bin)
수요일 10 9월 2025  09:49:30 +0900 (0:00:00.656)       0:00:24.535 **************** 

TASK [kubernetes/preinstall : Create calico cni directories] *******************
ok: [node1] => (item=/var/lib/calico)
ok: [node2] => (item=/var/lib/calico)
ok: [node3] => (item=/var/lib/calico)
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.368)       0:00:24.904 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.054)       0:00:24.958 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.029)       0:00:24.988 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.029)       0:00:25.017 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.114)       0:00:25.132 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.041)       0:00:25.173 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.030)       0:00:25.204 **************** 
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.030)       0:00:25.234 **************** 

TASK [kubernetes/preinstall : Create systemd-resolved drop-in directory] *******
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:31 +0900 (0:00:00.317)       0:00:25.552 **************** 

TASK [kubernetes/preinstall : Write Kubespray DNS settings to systemd-resolved] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.757)       0:00:26.309 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.029)       0:00:26.339 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.028)       0:00:26.367 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.028)       0:00:26.396 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.084)       0:00:26.480 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.033)       0:00:26.514 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.031)       0:00:26.545 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.029)       0:00:26.575 **************** 
수요일 10 9월 2025  09:49:32 +0900 (0:00:00.028)       0:00:26.603 **************** 
수요일 10 9월 2025  09:49:33 +0900 (0:00:00.029)       0:00:26.633 **************** 
수요일 10 9월 2025  09:49:33 +0900 (0:00:00.028)       0:00:26.662 **************** 

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
ok: [node1] => (item=ipv4-ip_forward.conf)
ok: [node2] => (item=ipv4-ip_forward.conf)
ok: [node3] => (item=ipv4-ip_forward.conf)
ok: [node1] => (item=bridge-nf-call.conf)
ok: [node3] => (item=bridge-nf-call.conf)
ok: [node2] => (item=bridge-nf-call.conf)
수요일 10 9월 2025  09:49:33 +0900 (0:00:00.581)       0:00:27.244 **************** 

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:33 +0900 (0:00:00.313)       0:00:27.558 **************** 

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:34 +0900 (0:00:00.114)       0:00:27.672 **************** 

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:34 +0900 (0:00:00.318)       0:00:27.990 **************** 

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:34 +0900 (0:00:00.356)       0:00:28.347 **************** 
수요일 10 9월 2025  09:49:34 +0900 (0:00:00.041)       0:00:28.388 **************** 

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:35 +0900 (0:00:00.298)       0:00:28.686 **************** 
수요일 10 9월 2025  09:49:35 +0900 (0:00:00.035)       0:00:28.722 **************** 

TASK [kubernetes/preinstall : Ensure kubelet expected parameters are set] ******
ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node2] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node3] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node3] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node2] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node3] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node2] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node2] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node3] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node2] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node3] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node3] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [node2] => (item={'name': 'vm.panic_on_oom', 'value': 0})
수요일 10 9월 2025  09:49:36 +0900 (0:00:01.728)       0:00:30.450 **************** 

TASK [kubernetes/preinstall : Check dummy module] ******************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.411)       0:00:30.861 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.073)       0:00:30.935 **************** 

TASK [kubernetes/preinstall : Disable fapolicyd service] ***********************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.531)       0:00:31.466 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.036)       0:00:31.503 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.028)       0:00:31.531 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.029)       0:00:31.560 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.027)       0:00:31.587 **************** 
수요일 10 9월 2025  09:49:37 +0900 (0:00:00.028)       0:00:31.616 **************** 
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.028)       0:00:31.645 **************** 
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.029)       0:00:31.674 **************** 
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.080)       0:00:31.755 **************** 

TASK [kubernetes/preinstall : Hosts | create hosts list from inventory] ********
ok: [node1 -> localhost]
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.044)       0:00:31.799 **************** 

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.331)       0:00:32.131 **************** 
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.034)       0:00:32.165 **************** 

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.293)       0:00:32.459 **************** 

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
ok: [node1] => (item=127.0.0.1 localhost)
ok: [node2] => (item=127.0.0.1 localhost)
ok: [node1] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node3] => (item=127.0.0.1 localhost)
ok: [node2] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node1] => (item=127.0.0.1 ubuntu2204.localdomain localhost localhost.localdomain)
ok: [node3] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node2] => (item=127.0.0.1 ubuntu2204.localdomain localhost localhost.localdomain)
ok: [node3] => (item=127.0.0.1 ubuntu2204.localdomain localhost localhost.localdomain)
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.083)       0:00:32.543 **************** 

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
수요일 10 9월 2025  09:49:38 +0900 (0:00:00.044)       0:00:32.587 **************** 

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
changed: [node3] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain', 'ubuntu2204.localdomain']})
changed: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain', 'ubuntu2204.localdomain']})
changed: [node2] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain', 'ubuntu2204.localdomain']})
changed: [node3] => (item={'key': '::1', 'value': ['localhost6', 'ip6-localhost', 'localhost6.localdomain', 'ip6-loopback']})
changed: [node2] => (item={'key': '::1', 'value': ['localhost6', 'ip6-localhost', 'localhost6.localdomain', 'ip6-loopback']})
changed: [node1] => (item={'key': '::1', 'value': ['localhost6', 'ip6-localhost', 'localhost6.localdomain', 'ip6-loopback']})
수요일 10 9월 2025  09:49:39 +0900 (0:00:00.719)       0:00:33.307 **************** 

TASK [kubernetes/preinstall : Update facts] ************************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:40 +0900 (0:00:00.736)       0:00:34.044 **************** 

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:40 +0900 (0:00:00.390)       0:00:34.434 **************** 

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.780)       0:00:35.214 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.033)       0:00:35.248 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.028)       0:00:35.277 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.029)       0:00:35.306 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.003)       0:00:35.309 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.002)       0:00:35.312 **************** 
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.003)       0:00:35.315 **************** 

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:41 +0900 (0:00:00.293)       0:00:35.608 **************** 

TASK [Run calico checks] *******************************************************
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.155)       0:00:35.764 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.025)       0:00:35.790 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.024)       0:00:35.814 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.024)       0:00:35.839 **************** 

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.026)       0:00:35.865 **************** 

TASK [network_plugin/calico : Check if calicoctl.sh exists] ********************
ok: [node1]
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.314)       0:00:36.179 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.023)       0:00:36.203 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.016)       0:00:36.219 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.017)       0:00:36.236 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.020)       0:00:36.257 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.015)       0:00:36.272 **************** 

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.025)       0:00:36.298 **************** 

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.024)       0:00:36.322 **************** 

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.025)       0:00:36.348 **************** 
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.014)       0:00:36.363 **************** 

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:49:42 +0900 (0:00:00.025)       0:00:36.388 **************** 

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [node1]
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.294)       0:00:36.682 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.028)       0:00:36.711 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.022)       0:00:36.734 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.019)       0:00:36.753 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.020)       0:00:36.774 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.019)       0:00:36.794 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.015)       0:00:36.809 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.125)       0:00:36.935 **************** 
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.037)       0:00:36.973 **************** 

TASK [container-engine/validate-container-engine : Validate-container-engine | check if fedora coreos] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.324)       0:00:37.297 **************** 

TASK [container-engine/validate-container-engine : Validate-container-engine | set is_ostree] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:43 +0900 (0:00:00.045)       0:00:37.343 **************** 

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:44 +0900 (0:00:00.308)       0:00:37.651 **************** 

TASK [container-engine/validate-container-engine : Populate service facts] *****
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:49:52 +0900 (0:00:08.362)       0:00:46.013 **************** 

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:52 +0900 (0:00:00.421)       0:00:46.435 **************** 

TASK [container-engine/validate-container-engine : Check if docker is installed] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.319)       0:00:46.755 **************** 

TASK [container-engine/validate-container-engine : Check if crio is installed] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.331)       0:00:47.087 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.036)       0:00:47.124 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.030)       0:00:47.154 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.086)       0:00:47.240 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.030)       0:00:47.270 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.051)       0:00:47.321 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.028)       0:00:47.350 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.033)       0:00:47.383 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.040)       0:00:47.423 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.064)       0:00:47.488 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.031)       0:00:47.520 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.034)       0:00:47.554 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.032)       0:00:47.587 **************** 
수요일 10 9월 2025  09:49:53 +0900 (0:00:00.027)       0:00:47.614 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.640 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.667 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.034)       0:00:47.701 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.728 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.042)       0:00:47.771 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:47.798 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.825 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.852 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.028)       0:00:47.880 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.045)       0:00:47.926 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.029)       0:00:47.955 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:47.982 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.010 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.037 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.031)       0:00:48.069 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.028)       0:00:48.097 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.124 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.029)       0:00:48.154 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.028)       0:00:48.183 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:48.210 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.041)       0:00:48.251 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.083)       0:00:48.335 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:48.362 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:48.389 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.416 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.033)       0:00:48.450 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.033)       0:00:48.484 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.511 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.026)       0:00:48.538 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.029)       0:00:48.567 **************** 
수요일 10 9월 2025  09:49:54 +0900 (0:00:00.027)       0:00:48.594 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.033)       0:00:48.628 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:48.655 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.028)       0:00:48.683 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:48.711 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:48.739 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.028)       0:00:48.768 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:48.795 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.026)       0:00:48.821 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.029)       0:00:48.851 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.030)       0:00:48.881 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:48.909 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.033)       0:00:48.942 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.026)       0:00:48.969 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.042)       0:00:49.012 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.028)       0:00:49.041 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.025)       0:00:49.066 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.025)       0:00:49.092 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.029)       0:00:49.122 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.027)       0:00:49.149 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.029)       0:00:49.179 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.031)       0:00:49.210 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.026)       0:00:49.237 **************** 
수요일 10 9월 2025  09:49:55 +0900 (0:00:00.025)       0:00:49.262 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.395)       0:00:49.658 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.024)       0:00:49.683 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.031)       0:00:49.714 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:49.739 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.031)       0:00:49.771 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:49.797 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.032)       0:00:49.830 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.032)       0:00:49.863 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.028)       0:00:49.891 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:49.917 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:49.943 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:49.969 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.031)       0:00:50.001 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.027 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.024)       0:00:50.051 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.027)       0:00:50.079 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.104 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.130 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:50.157 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.182 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.027)       0:00:50.210 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.235 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.260 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:50.287 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.312 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.030)       0:00:50.343 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.029)       0:00:50.372 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.398 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:50.425 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:50.451 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.477 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.026)       0:00:50.503 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.025)       0:00:50.528 **************** 
수요일 10 9월 2025  09:49:56 +0900 (0:00:00.024)       0:00:50.553 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.080)       0:00:50.634 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.660 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.024)       0:00:50.684 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.034)       0:00:50.718 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.744 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.030)       0:00:50.774 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.800 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.826 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.027)       0:00:50.854 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.028)       0:00:50.882 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.908 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.025)       0:00:50.933 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.031)       0:00:50.965 **************** 

TASK [container-engine/containerd-common : Containerd-common | check if fedora coreos] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.298)       0:00:51.263 **************** 

TASK [container-engine/containerd-common : Containerd-common | set is_ostree] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.041)       0:00:51.305 **************** 
수요일 10 9월 2025  09:49:57 +0900 (0:00:00.045)       0:00:51.350 **************** 

TASK [container-engine/runc : Runc | check if fedora coreos] *******************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:49:58 +0900 (0:00:00.293)       0:00:51.643 **************** 

TASK [container-engine/runc : Runc | set is_ostree] ****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:58 +0900 (0:00:00.043)       0:00:51.687 **************** 

TASK [container-engine/runc : Runc | Uninstall runc package managed by package manager] ***
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:49:59 +0900 (0:00:01.090)       0:00:52.778 **************** 

TASK [container-engine/runc : Runc | Download runc binary] *********************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  09:49:59 +0900 (0:00:00.046)       0:00:52.824 **************** 

TASK [container-engine/runc : Prep_download | Set a few facts] *****************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:59 +0900 (0:00:00.156)       0:00:52.980 **************** 
수요일 10 9월 2025  09:49:59 +0900 (0:00:00.032)       0:00:53.013 **************** 

TASK [container-engine/runc : Download_file | Set pathname of cached file] *****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:49:59 +0900 (0:00:00.273)       0:00:53.286 **************** 

TASK [container-engine/runc : Download_file | Create dest directory on node] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:00 +0900 (0:00:00.656)       0:00:53.943 **************** 
수요일 10 9월 2025  09:50:00 +0900 (0:00:00.026)       0:00:53.969 **************** 
수요일 10 9월 2025  09:50:00 +0900 (0:00:00.017)       0:00:53.986 **************** 

TASK [container-engine/runc : Download_file | Download item] *******************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:50:02 +0900 (0:00:01.798)       0:00:55.785 **************** 
수요일 10 9월 2025  09:50:02 +0900 (0:00:00.039)       0:00:55.824 **************** 
수요일 10 9월 2025  09:50:02 +0900 (0:00:00.031)       0:00:55.855 **************** 
수요일 10 9월 2025  09:50:02 +0900 (0:00:00.027)       0:00:55.883 **************** 

TASK [container-engine/runc : Download_file | Extract file archives] ***********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:02 +0900 (0:00:00.041)       0:00:55.924 **************** 
수요일 10 9월 2025  09:50:02 +0900 (0:00:00.165)       0:00:56.090 **************** 

TASK [container-engine/runc : Copy runc binary from download dir] **************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.736)       0:00:56.826 **************** 

TASK [container-engine/runc : Runc | Remove orphaned binary] *******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.327)       0:00:57.154 **************** 

TASK [container-engine/crictl : Install crictl] ********************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1, node2, node3
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.087)       0:00:57.242 **************** 

TASK [container-engine/crictl : Crictl | Download crictl] **********************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.042)       0:00:57.284 **************** 

TASK [container-engine/crictl : Prep_download | Set a few facts] ***************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.151)       0:00:57.436 **************** 
수요일 10 9월 2025  09:50:03 +0900 (0:00:00.031)       0:00:57.467 **************** 

TASK [container-engine/crictl : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:04 +0900 (0:00:00.264)       0:00:57.731 **************** 

TASK [container-engine/crictl : Download_file | Create dest directory on node] ***
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:04 +0900 (0:00:00.657)       0:00:58.389 **************** 
수요일 10 9월 2025  09:50:04 +0900 (0:00:00.029)       0:00:58.418 **************** 
수요일 10 9월 2025  09:50:04 +0900 (0:00:00.017)       0:00:58.436 **************** 

TASK [container-engine/crictl : Download_file | Download item] *****************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:50:06 +0900 (0:00:01.600)       0:01:00.036 **************** 
수요일 10 9월 2025  09:50:06 +0900 (0:00:00.038)       0:01:00.074 **************** 
수요일 10 9월 2025  09:50:06 +0900 (0:00:00.037)       0:01:00.112 **************** 
수요일 10 9월 2025  09:50:06 +0900 (0:00:00.029)       0:01:00.141 **************** 

TASK [container-engine/crictl : Download_file | Extract file archives] *********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:06 +0900 (0:00:00.043)       0:01:00.185 **************** 

TASK [container-engine/crictl : Extract_file | Unpacking archive] **************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:50:09 +0900 (0:00:02.531)       0:01:02.717 **************** 

TASK [container-engine/crictl : Install crictl config] *************************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:50:09 +0900 (0:00:00.748)       0:01:03.466 **************** 

TASK [container-engine/crictl : Copy crictl binary from download dir] **********
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:50:10 +0900 (0:00:00.673)       0:01:04.139 **************** 

TASK [container-engine/nerdctl : Nerdctl | Download nerdctl] *******************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:10 +0900 (0:00:00.045)       0:01:04.184 **************** 

TASK [container-engine/nerdctl : Prep_download | Set a few facts] **************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:10 +0900 (0:00:00.154)       0:01:04.339 **************** 
수요일 10 9월 2025  09:50:10 +0900 (0:00:00.031)       0:01:04.370 **************** 

TASK [container-engine/nerdctl : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:11 +0900 (0:00:00.265)       0:01:04.636 **************** 

TASK [container-engine/nerdctl : Download_file | Create dest directory on node] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:11 +0900 (0:00:00.655)       0:01:05.291 **************** 
수요일 10 9월 2025  09:50:11 +0900 (0:00:00.016)       0:01:05.308 **************** 
수요일 10 9월 2025  09:50:11 +0900 (0:00:00.018)       0:01:05.326 **************** 

TASK [container-engine/nerdctl : Download_file | Download item] ****************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:50:13 +0900 (0:00:01.710)       0:01:07.037 **************** 
수요일 10 9월 2025  09:50:13 +0900 (0:00:00.028)       0:01:07.066 **************** 
수요일 10 9월 2025  09:50:13 +0900 (0:00:00.029)       0:01:07.095 **************** 
수요일 10 9월 2025  09:50:13 +0900 (0:00:00.027)       0:01:07.122 **************** 

TASK [container-engine/nerdctl : Download_file | Extract file archives] ********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:13 +0900 (0:00:00.039)       0:01:07.162 **************** 

TASK [container-engine/nerdctl : Extract_file | Unpacking archive] *************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:50:15 +0900 (0:00:02.198)       0:01:09.360 **************** 

TASK [container-engine/nerdctl : Nerdctl | Copy nerdctl binary from download dir] ***
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:50:16 +0900 (0:00:00.569)       0:01:09.929 **************** 

TASK [container-engine/nerdctl : Nerdctl | Create configuration dir] ***********
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:16 +0900 (0:00:00.398)       0:01:10.327 **************** 

TASK [container-engine/nerdctl : Nerdctl | Install nerdctl configuration] ******
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:17 +0900 (0:00:00.735)       0:01:11.063 **************** 

TASK [container-engine/containerd : Containerd | Download containerd] **********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:17 +0900 (0:00:00.095)       0:01:11.159 **************** 

TASK [container-engine/containerd : Prep_download | Set a few facts] ***********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:17 +0900 (0:00:00.161)       0:01:11.320 **************** 
수요일 10 9월 2025  09:50:17 +0900 (0:00:00.032)       0:01:11.353 **************** 

TASK [container-engine/containerd : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:17 +0900 (0:00:00.267)       0:01:11.621 **************** 

TASK [container-engine/containerd : Download_file | Create dest directory on node] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:50:18 +0900 (0:00:00.661)       0:01:12.283 **************** 
수요일 10 9월 2025  09:50:18 +0900 (0:00:00.025)       0:01:12.308 **************** 
수요일 10 9월 2025  09:50:18 +0900 (0:00:00.019)       0:01:12.328 **************** 

TASK [container-engine/containerd : Download_file | Download item] *************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:20 +0900 (0:00:01.679)       0:01:14.007 **************** 
수요일 10 9월 2025  09:50:20 +0900 (0:00:00.043)       0:01:14.051 **************** 
수요일 10 9월 2025  09:50:20 +0900 (0:00:00.030)       0:01:14.081 **************** 
수요일 10 9월 2025  09:50:20 +0900 (0:00:00.031)       0:01:14.112 **************** 

TASK [container-engine/containerd : Download_file | Extract file archives] *****
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:20 +0900 (0:00:00.041)       0:01:14.153 **************** 
수요일 10 9월 2025  09:50:20 +0900 (0:00:00.153)       0:01:14.307 **************** 

TASK [container-engine/containerd : Containerd | Unpack containerd archive] ****
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:23 +0900 (0:00:03.164)       0:01:17.472 **************** 

TASK [container-engine/containerd : Containerd | Generate systemd service for containerd] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:50:24 +0900 (0:00:00.765)       0:01:18.238 **************** 

TASK [container-engine/containerd : Containerd | Ensure containerd directories exist] ***
ok: [node2] => (item=/etc/systemd/system/containerd.service.d)
ok: [node1] => (item=/etc/systemd/system/containerd.service.d)
ok: [node3] => (item=/etc/systemd/system/containerd.service.d)
ok: [node1] => (item=/etc/containerd)
ok: [node2] => (item=/etc/containerd)
ok: [node3] => (item=/etc/containerd)
ok: [node3] => (item=/var/lib/containerd)
ok: [node1] => (item=/var/lib/containerd)
ok: [node2] => (item=/var/lib/containerd)
ok: [node1] => (item=/run/containerd)
ok: [node3] => (item=/run/containerd)
ok: [node2] => (item=/run/containerd)
수요일 10 9월 2025  09:50:25 +0900 (0:00:01.210)       0:01:19.448 **************** 
수요일 10 9월 2025  09:50:25 +0900 (0:00:00.049)       0:01:19.498 **************** 

TASK [container-engine/containerd : Containerd | Generate default base_runtime_spec] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:26 +0900 (0:00:00.365)       0:01:19.864 **************** 

TASK [container-engine/containerd : Containerd | Store generated default base_runtime_spec] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:26 +0900 (0:00:00.053)       0:01:19.917 **************** 

TASK [container-engine/containerd : Containerd | Write base_runtime_specs] *****
ok: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [node3] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [node2] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
수요일 10 9월 2025  09:50:27 +0900 (0:00:00.823)       0:01:20.741 **************** 

TASK [container-engine/containerd : Containerd | Copy containerd config file] ***
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:50:27 +0900 (0:00:00.828)       0:01:21.569 **************** 

TASK [container-engine/containerd : Containerd | Create registry directories] ***
ok: [node3] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node2] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node1] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
수요일 10 9월 2025  09:50:28 +0900 (0:00:00.348)       0:01:21.917 **************** 

TASK [container-engine/containerd : Containerd | Write hosts.toml file] ********
ok: [node3] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node1] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node2] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
수요일 10 9월 2025  09:50:29 +0900 (0:00:00.771)       0:01:22.689 **************** 
수요일 10 9월 2025  09:50:29 +0900 (0:00:00.012)       0:01:22.702 **************** 
수요일 10 9월 2025  09:50:29 +0900 (0:00:00.011)       0:01:22.714 **************** 
수요일 10 9월 2025  09:50:29 +0900 (0:00:00.012)       0:01:22.726 **************** 

TASK [container-engine/containerd : Containerd | Ensure containerd is started and enabled] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:30 +0900 (0:00:01.100)       0:01:23.827 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.053)       0:01:23.880 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.050)       0:01:23.931 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.091)       0:01:24.022 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.053)       0:01:24.076 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.026)       0:01:24.102 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.039)       0:01:24.142 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.026)       0:01:24.168 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.025)       0:01:24.194 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.026)       0:01:24.220 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.025)       0:01:24.246 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.025)       0:01:24.271 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.027)       0:01:24.298 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.025)       0:01:24.324 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.025)       0:01:24.349 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.145)       0:01:24.494 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.068)       0:01:24.563 **************** 
수요일 10 9월 2025  09:50:30 +0900 (0:00:00.054)       0:01:24.618 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.061)       0:01:24.680 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.049)       0:01:24.729 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.066)       0:01:24.796 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.052)       0:01:24.849 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.012)       0:01:24.861 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.014)       0:01:24.875 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.012)       0:01:24.888 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.050)       0:01:24.938 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.057)       0:01:24.995 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.042)       0:01:25.038 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.026)       0:01:25.064 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.026)       0:01:25.091 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.024)       0:01:25.116 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.024)       0:01:25.141 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.026)       0:01:25.168 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.005)       0:01:25.173 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.004)       0:01:25.177 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.004)       0:01:25.182 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.031)       0:01:25.214 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.025)       0:01:25.240 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.024)       0:01:25.264 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.027)       0:01:25.291 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.005)       0:01:25.297 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.004)       0:01:25.301 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.016)       0:01:25.318 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.035)       0:01:25.354 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.016)       0:01:25.370 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.016)       0:01:25.387 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.032)       0:01:25.419 **************** 
수요일 10 9월 2025  09:50:31 +0900 (0:00:00.029)       0:01:25.448 **************** 

TASK [download : Prep_download | Register docker images info] ******************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:50:32 +0900 (0:00:00.445)       0:01:25.894 **************** 

TASK [download : Prep_download | Create staging directory on remote node] ******
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:50:32 +0900 (0:00:00.333)       0:01:26.228 **************** 
수요일 10 9월 2025  09:50:32 +0900 (0:00:00.033)       0:01:26.262 **************** 

TASK [download : Download | Get kubeadm binary and list of required images] ****
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1, node2, node3
수요일 10 9월 2025  09:50:32 +0900 (0:00:00.049)       0:01:26.312 **************** 

TASK [download : Prep_kubeadm_images | Download kubeadm binary] ****************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:33 +0900 (0:00:00.453)       0:01:26.765 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:33 +0900 (0:00:00.367)       0:01:27.133 **************** 
수요일 10 9월 2025  09:50:33 +0900 (0:00:00.032)       0:01:27.165 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:33 +0900 (0:00:00.270)       0:01:27.436 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:34 +0900 (0:00:00.655)       0:01:28.091 **************** 
수요일 10 9월 2025  09:50:34 +0900 (0:00:00.030)       0:01:28.121 **************** 
수요일 10 9월 2025  09:50:34 +0900 (0:00:00.022)       0:01:28.143 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:50:36 +0900 (0:00:02.182)       0:01:30.326 **************** 
수요일 10 9월 2025  09:50:36 +0900 (0:00:00.039)       0:01:30.366 **************** 
수요일 10 9월 2025  09:50:36 +0900 (0:00:00.029)       0:01:30.396 **************** 
수요일 10 9월 2025  09:50:36 +0900 (0:00:00.030)       0:01:30.426 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:36 +0900 (0:00:00.042)       0:01:30.469 **************** 
수요일 10 9월 2025  09:50:36 +0900 (0:00:00.148)       0:01:30.617 **************** 

TASK [download : Prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
changed: [node1]
changed: [node2]
changed: [node3]
수요일 10 9월 2025  09:50:37 +0900 (0:00:00.951)       0:01:31.569 **************** 

TASK [download : Prep_kubeadm_images | Create kubeadm config] ******************
changed: [node3]
changed: [node2]
changed: [node1]
수요일 10 9월 2025  09:50:38 +0900 (0:00:01.050)       0:01:32.619 **************** 

TASK [download : Prep_kubeadm_images | Generate list of required images] *******
ok: [node1]
수요일 10 9월 2025  09:50:39 +0900 (0:00:00.428)       0:01:33.048 **************** 

TASK [download : Prep_kubeadm_images | Parse list of images] *******************
ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.32.8)
수요일 10 9월 2025  09:50:39 +0900 (0:00:00.059)       0:01:33.108 **************** 

TASK [download : Prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [node1]
수요일 10 9월 2025  09:50:39 +0900 (0:00:00.024)       0:01:33.132 **************** 

TASK [download : Download | Download files / images] ***************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'dest': '/tmp/releases/etcd-3.5.22-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.22', 'checksum': 'sha256:20174ab70a6f3df94da13ecac4610f42c47d25af82426f21c112c2c841ec499a', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.22/etcd-v3.5.22-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/cni-plugins-linux-amd64-1.4.1.tgz', 'checksum': 'sha256:2a0ea7072d1806b8526489bcd3b4847a06ab010ee32ba3c3d4e5a3235d3eb138', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.4.1/cni-plugins-linux-amd64-v1.4.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubeadm-1.32.8-amd64', 'checksum': 'sha256:da4cc996800db14f82fce8813caa55be318e52ef69d82e50e728ef4cfa18b69f', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubelet-1.32.8-amd64', 'checksum': 'sha256:7dfca4da9cdf592c0f70800e09fb42553765bc0951cade3d6e0c571daf3f23ee', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubectl-1.32.8-amd64', 'checksum': 'sha256:0fc709a8262be523293a18965771fedfba7466eda7ab4337feaa5c028aa46b1b', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/crictl-1.32.0-linux-amd64.tar.gz', 'checksum': 'sha256:f050b71d3a73a91a4e0990b90143ed04dcd100cc66f953736fcb6a2730e283c4', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.32.0/crictl-v1.32.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/runc-1.2.6.amd64', 'checksum': 'sha256:0774f49d1b1eebb5849e644db5e4dc6f2b06cee05f13b3d17d5d6ba62d6f2ebc', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.2.6/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/containerd-2.0.6-linux-amd64.tar.gz', 'checksum': 'sha256:a545471a67b8508a3c58ad01a4e6bb2921ace1e59e00a0a2d2e784c1f4fa8caa', 'url': 'https://github.com/containerd/containerd/releases/download/v2.0.6/containerd-2.0.6-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/nerdctl-2.0.5-linux-amd64.tar.gz', 'checksum': 'sha256:a029af80fd4b3de096d1a18779e7ff8369fbd1285944ebc50bdd22ad41438b5d', 'url': 'https://github.com/containerd/nerdctl/releases/download/v2.0.5/nerdctl-2.0.5-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/calicoctl-3.29.5-amd64', 'checksum': 'sha256:0b118c7efa08e84751a6c7f6647d61ecac58793343d949ad75b71a1d55480a9c', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.29.5/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/calico-3.29.5-kdd-crds/3.29.5.tar.gz', 'checksum': 'sha256:f36d0b31aaa34f648b211d16f864f262e4700aad30ab0889b327d31c115b6a42', 'url': 'https://github.com/projectcalico/calico/archive/v3.29.5.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.10', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.27.4-alpine', 'checksum': '', 'groups': ['kube_node']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.11.3', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.25.0', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'checksum': '', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.516)       0:01:33.648 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.033)       0:01:33.682 **************** 
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.040)       0:01:33.722 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.083)       0:01:33.806 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.328)       0:01:34.135 **************** 
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.025)       0:01:34.160 **************** 
수요일 10 9월 2025  09:50:40 +0900 (0:00:00.024)       0:01:34.185 **************** 

TASK [download : Download_file | Download item] ********************************
changed: [node1]
changed: [node2]
changed: [node3]
수요일 10 9월 2025  09:50:49 +0900 (0:00:09.411)       0:01:43.597 **************** 
수요일 10 9월 2025  09:50:50 +0900 (0:00:00.045)       0:01:43.643 **************** 
수요일 10 9월 2025  09:50:50 +0900 (0:00:00.031)       0:01:43.674 **************** 
수요일 10 9월 2025  09:50:50 +0900 (0:00:00.026)       0:01:43.701 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:50:50 +0900 (0:00:00.089)       0:01:43.791 **************** 

TASK [download : Extract_file | Unpacking archive] *****************************
changed: [node3]
changed: [node2]
changed: [node1]
수요일 10 9월 2025  09:50:52 +0900 (0:00:02.812)       0:01:46.604 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.047)       0:01:46.651 **************** 
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.025)       0:01:46.677 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.033)       0:01:46.711 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.320)       0:01:47.031 **************** 
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.024)       0:01:47.056 **************** 
수요일 10 9월 2025  09:50:53 +0900 (0:00:00.019)       0:01:47.076 **************** 

TASK [download : Download_file | Download item] ********************************
changed: [node3]
changed: [node1]
changed: [node2]
수요일 10 9월 2025  09:51:11 +0900 (0:00:17.616)       0:02:04.693 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.046)       0:02:04.739 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.029)       0:02:04.769 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.028)       0:02:04.797 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.042)       0:02:04.839 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.027)       0:02:04.867 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.031)       0:02:04.899 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.026)       0:02:04.925 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.032)       0:02:04.958 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.323)       0:02:05.281 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.026)       0:02:05.307 **************** 
수요일 10 9월 2025  09:51:11 +0900 (0:00:00.026)       0:02:05.334 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.686)       0:02:06.021 **************** 
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.036)       0:02:06.057 **************** 
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.029)       0:02:06.087 **************** 
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.025)       0:02:06.113 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.042)       0:02:06.155 **************** 
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.027)       0:02:06.183 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.034)       0:02:06.217 **************** 
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.025)       0:02:06.243 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:51:12 +0900 (0:00:00.032)       0:02:06.275 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:51:13 +0900 (0:00:00.362)       0:02:06.638 **************** 
수요일 10 9월 2025  09:51:13 +0900 (0:00:00.028)       0:02:06.667 **************** 
수요일 10 9월 2025  09:51:13 +0900 (0:00:00.021)       0:02:06.688 **************** 
