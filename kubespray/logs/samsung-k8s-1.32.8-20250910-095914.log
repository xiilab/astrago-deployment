[WARNING]: While constructing a mapping from
/Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kub
espray/roles/bootstrap_os/tasks/main.yml, line 29, column 7, found a duplicate
dict key (paths). Using last defined value only.
[WARNING]: Skipping callback plugin 'ara_default', unable to load

PLAY [Check Ansible version] ***************************************************
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.006)       0:00:00.006 **************** 

TASK [Check 2.16.4 <= Ansible version < 2.17.0] ********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.014)       0:00:00.020 **************** 

TASK [Check that python netaddr is installed] **********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.032)       0:00:00.053 **************** 

TASK [Check that jinja is not too old (install via pip)] ***********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Define groups for legacy less structured inventories] ********************
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.012)       0:00:00.065 **************** 

TASK [Match needed groups by their old names or definition] ********************
changed: [node1] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node1] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node1] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node1] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node1] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
changed: [node2] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node2] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node2] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node2] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node2] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
changed: [node3] => (item={'key': 'kube_control_plane', 'value': ['kube-master']})
ok: [node3] => (item={'key': 'kube_node', 'value': ['kube-node']})
ok: [node3] => (item={'key': 'calico_rr', 'value': ['calico-rr']})
ok: [node3] => (item={'key': 'no_floating', 'value': ['no-floating']})
ok: [node3] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})

PLAY [Check inventory settings] ************************************************
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.047)       0:00:00.113 **************** 

TASK [validate_inventory : Stop if some versions have a 'v' left at the start] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.043)       0:00:00.157 **************** 

TASK [validate_inventory : Stop if some derived versions have a 'v' left at the start] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.097)       0:00:00.255 **************** 

TASK [validate_inventory : Stop if kube_control_plane group is empty] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.019)       0:00:00.274 **************** 

TASK [validate_inventory : Stop if etcd group is empty in external etcd mode] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:15 +0900 (0:00:00.019)       0:00:00.293 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.092)       0:00:00.386 **************** 

TASK [validate_inventory : Stop if unsupported version of Kubernetes] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.063)       0:00:00.449 **************** 

TASK [validate_inventory : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.020)       0:00:00.470 **************** 

TASK [validate_inventory : Stop if even number of etcd hosts] ******************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.020)       0:00:00.490 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.024)       0:00:00.515 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.025)       0:00:00.540 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.023)       0:00:00.563 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.024)       0:00:00.588 **************** 

TASK [validate_inventory : Check that kube_service_addresses is a network range] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.039)       0:00:00.627 **************** 

TASK [validate_inventory : Check that kube_pods_subnet is a network range] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.080)       0:00:00.707 **************** 

TASK [validate_inventory : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.116)       0:00:00.824 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.014)       0:00:00.839 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.015)       0:00:00.855 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.015)       0:00:00.870 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.015)       0:00:00.885 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.015)       0:00:00.901 **************** 

TASK [validate_inventory : Stop if unsupported options selected] ***************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.020)       0:00:00.922 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.027)       0:00:00.949 **************** 

TASK [validate_inventory : Stop if etcd_kubeadm_enabled is defined] ************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.022)       0:00:00.971 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.027)       0:00:00.999 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.027)       0:00:01.027 **************** 
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.029)       0:00:01.056 **************** 

TASK [validate_inventory : Ensure minimum containerd version] ******************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.024)       0:00:01.080 **************** 
[WARNING]: Could not match supplied host pattern, ignoring: bastion

PLAY [Install bastion ssh config] **********************************************
skipping: no hosts matched

PLAY [Bootstrap hosts for Ansible] *********************************************
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.113)       0:00:01.194 **************** 
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap_os : Fetch /etc/os-release] ************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:16 +0900 (0:00:00.074)       0:00:01.268 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.058)       0:00:01.327 **************** 

TASK [bootstrap_os : Include tasks] ********************************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/bootstrap_os/tasks/ubuntu.yml for node1, node2, node3 => (item=/Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/bootstrap_os/tasks/ubuntu.yml)
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.062)       0:00:01.389 **************** 

TASK [bootstrap_os : Check if bootstrap is needed] *****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.070)       0:00:01.460 **************** 

TASK [bootstrap_os : Check http::proxy in apt configuration files] *************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.087)       0:00:01.547 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.029)       0:00:01.576 **************** 

TASK [bootstrap_os : Check https::proxy in apt configuration files] ************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.148)       0:00:01.725 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.053)       0:00:01.778 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.025)       0:00:01.804 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.039)       0:00:01.844 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.024)       0:00:01.868 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.025)       0:00:01.894 **************** 
수요일 10 9월 2025  09:59:17 +0900 (0:00:00.024)       0:00:01.918 **************** 

TASK [system_packages : Gather OS information] *********************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:18 +0900 (0:00:00.883)       0:00:02.802 **************** 
수요일 10 9월 2025  09:59:18 +0900 (0:00:00.039)       0:00:02.842 **************** 
수요일 10 9월 2025  09:59:18 +0900 (0:00:00.078)       0:00:02.920 **************** 
수요일 10 9월 2025  09:59:18 +0900 (0:00:00.026)       0:00:02.946 **************** 

TASK [system_packages : Update package management cache (APT)] *****************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:19 +0900 (0:00:01.179)       0:00:04.126 **************** 
수요일 10 9월 2025  09:59:19 +0900 (0:00:00.043)       0:00:04.170 **************** 
수요일 10 9월 2025  09:59:19 +0900 (0:00:00.028)       0:00:04.198 **************** 

TASK [system_packages : Manage packages] ***************************************
ok: [node3] => (item=remove)
ok: [node1] => (item=remove)
ok: [node2] => (item=remove)
ok: [node3] => (item=install)
ok: [node1] => (item=install)
ok: [node2] => (item=install)
수요일 10 9월 2025  09:59:22 +0900 (0:00:02.651)       0:00:06.849 **************** 

TASK [bootstrap_os : Create remote_tmp for it is used by another module] *******
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:22 +0900 (0:00:00.406)       0:00:07.256 **************** 

TASK [bootstrap_os : Gather facts] *********************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:23 +0900 (0:00:00.887)       0:00:08.143 **************** 

TASK [bootstrap_os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:24 +0900 (0:00:00.975)       0:00:09.119 **************** 

TASK [bootstrap_os : Ensure bash_completion.d folder exists] *******************
ok: [node1]
ok: [node3]
ok: [node2]

PLAY [Gather facts] ************************************************************
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.363)       0:00:09.482 **************** 
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.030)       0:00:09.513 **************** 

TASK [network_facts : Set fallback_ip] *****************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.035)       0:00:09.548 **************** 
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.029)       0:00:09.577 **************** 

TASK [network_facts : Set fallback_ip6] ****************************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.033)       0:00:09.611 **************** 

TASK [network_facts : Set main access ip(access_ip based on ipv4_stack/ipv6_stack options).] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.080)       0:00:09.692 **************** 

TASK [network_facts : Set main ip(ip based on ipv4_stack/ipv6_stack options).] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.034)       0:00:09.726 **************** 

TASK [network_facts : Set main access ips(mixed ips for dualstack).] ***********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.035)       0:00:09.761 **************** 

TASK [network_facts : Set main ips(mixed ips for dualstack).] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.034)       0:00:09.796 **************** 
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.014)       0:00:09.810 **************** 
수요일 10 9월 2025  09:59:25 +0900 (0:00:00.035)       0:00:09.846 **************** 

TASK [Gather minimal facts] ****************************************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:26 +0900 (0:00:00.755)       0:00:10.602 **************** 

TASK [Gather necessary facts (network)] ****************************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:27 +0900 (0:00:00.840)       0:00:11.442 **************** 

TASK [Gather necessary facts (hardware)] ***************************************
ok: [node1]
ok: [node3]
ok: [node2]

PLAY [Prepare for etcd install] ************************************************
수요일 10 9월 2025  09:59:28 +0900 (0:00:01.234)       0:00:12.677 **************** 

TASK [adduser : User | Create User Group] **************************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:28 +0900 (0:00:00.358)       0:00:13.036 **************** 

TASK [adduser : User | Create User] ********************************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:29 +0900 (0:00:00.516)       0:00:13.552 **************** 

TASK [kubernetes/preinstall : Check if /etc/fstab exists] **********************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:29 +0900 (0:00:00.408)       0:00:13.961 **************** 

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [node1] => (item=swap)
ok: [node3] => (item=swap)
ok: [node2] => (item=swap)
ok: [node3] => (item=none)
ok: [node1] => (item=none)
ok: [node2] => (item=none)
수요일 10 9월 2025  09:59:30 +0900 (0:00:00.707)       0:00:14.669 **************** 

TASK [kubernetes/preinstall : Mask swap.target (persist swapoff)] **************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:31 +0900 (0:00:00.729)       0:00:15.399 **************** 

TASK [kubernetes/preinstall : Disable swap] ************************************
changed: [node3]
changed: [node1]
changed: [node2]
수요일 10 9월 2025  09:59:31 +0900 (0:00:00.449)       0:00:15.849 **************** 
수요일 10 9월 2025  09:59:31 +0900 (0:00:00.041)       0:00:15.891 **************** 

TASK [kubernetes/preinstall : Check resolvconf] ********************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:31 +0900 (0:00:00.311)       0:00:16.203 **************** 

TASK [kubernetes/preinstall : Check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:32 +0900 (0:00:00.314)       0:00:16.517 **************** 

TASK [kubernetes/preinstall : Check status of /etc/resolv.conf] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:32 +0900 (0:00:00.319)       0:00:16.837 **************** 

TASK [kubernetes/preinstall : Fetch resolv.conf] *******************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:32 +0900 (0:00:00.393)       0:00:17.231 **************** 

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:33 +0900 (0:00:00.337)       0:00:17.569 **************** 

TASK [kubernetes/preinstall : Check systemd-resolved] **************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:33 +0900 (0:00:00.345)       0:00:17.914 **************** 

TASK [kubernetes/preinstall : Set default dns if remove_default_searchdomains is false] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:33 +0900 (0:00:00.049)       0:00:17.964 **************** 

TASK [kubernetes/preinstall : Set dns facts] ***********************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:33 +0900 (0:00:00.103)       0:00:18.067 **************** 

TASK [kubernetes/preinstall : Check if kubelet is configured] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.310)       0:00:18.377 **************** 

TASK [kubernetes/preinstall : Check if early DNS configuration stage] **********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.049)       0:00:18.427 **************** 

TASK [kubernetes/preinstall : Target resolv.conf files] ************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.038)       0:00:18.466 **************** 
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.026)       0:00:18.492 **************** 

TASK [kubernetes/preinstall : Check if /etc/dhclient.conf exists] **************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.302)       0:00:18.795 **************** 
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.034)       0:00:18.829 **************** 

TASK [kubernetes/preinstall : Check if /etc/dhcp/dhclient.conf exists] *********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.308)       0:00:19.138 **************** 

TASK [kubernetes/preinstall : Target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.048)       0:00:19.186 **************** 
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.073)       0:00:19.260 **************** 

TASK [kubernetes/preinstall : Target dhclient hook file for Debian family] *****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:34 +0900 (0:00:00.037)       0:00:19.297 **************** 
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.025)       0:00:19.323 **************** 

TASK [kubernetes/preinstall : Check /usr readonly] *****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.305)       0:00:19.629 **************** 
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.034)       0:00:19.663 **************** 
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.016)       0:00:19.679 **************** 

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.038)       0:00:19.718 **************** 

TASK [kubernetes/preinstall : Stop if the os does not support] *****************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.037)       0:00:19.755 **************** 

TASK [kubernetes/preinstall : Stop if memory is too small for control plane nodes] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.037)       0:00:19.793 **************** 

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.122)       0:00:19.915 **************** 

TASK [kubernetes/preinstall : Stop if cgroups are not enabled on nodes] ********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.310)       0:00:20.226 **************** 

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:35 +0900 (0:00:00.046)       0:00:20.272 **************** 

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.318)       0:00:20.590 **************** 
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.035)       0:00:20.625 **************** 
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.027)       0:00:20.653 **************** 

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.037)       0:00:20.691 **************** 

TASK [kubernetes/preinstall : Stop if /etc/resolv.conf has no configured nameservers] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.059)       0:00:20.750 **************** 
수요일 10 9월 2025  09:59:36 +0900 (0:00:00.025)       0:00:20.776 **************** 

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
ok: [node1] => (item=/etc/kubernetes)
ok: [node2] => (item=/etc/kubernetes)
ok: [node3] => (item=/etc/kubernetes)
ok: [node1] => (item=/etc/kubernetes/manifests)
ok: [node2] => (item=/etc/kubernetes/manifests)
ok: [node3] => (item=/etc/kubernetes/manifests)
ok: [node1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node2] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node3] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node2] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node3] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
수요일 10 9월 2025  09:59:37 +0900 (0:00:01.270)       0:00:22.046 **************** 

TASK [kubernetes/preinstall : Create other directories of root owner] **********
ok: [node1] => (item=/etc/kubernetes/ssl)
ok: [node2] => (item=/etc/kubernetes/ssl)
ok: [node3] => (item=/etc/kubernetes/ssl)
ok: [node1] => (item=/usr/local/bin)
ok: [node2] => (item=/usr/local/bin)
ok: [node3] => (item=/usr/local/bin)
수요일 10 9월 2025  09:59:38 +0900 (0:00:00.592)       0:00:22.639 **************** 

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:38 +0900 (0:00:00.314)       0:00:22.953 **************** 
수요일 10 9월 2025  09:59:38 +0900 (0:00:00.036)       0:00:22.990 **************** 

TASK [kubernetes/preinstall : Create cni directories] **************************
ok: [node1] => (item=/etc/cni/net.d)
ok: [node2] => (item=/etc/cni/net.d)
ok: [node3] => (item=/etc/cni/net.d)
ok: [node2] => (item=/opt/cni/bin)
ok: [node3] => (item=/opt/cni/bin)
ok: [node1] => (item=/opt/cni/bin)
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.598)       0:00:23.588 **************** 

TASK [kubernetes/preinstall : Create calico cni directories] *******************
ok: [node1] => (item=/var/lib/calico)
ok: [node2] => (item=/var/lib/calico)
ok: [node3] => (item=/var/lib/calico)
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.312)       0:00:23.900 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.033)       0:00:23.934 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.025)       0:00:23.959 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.025)       0:00:23.985 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.105)       0:00:24.091 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.038)       0:00:24.129 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.027)       0:00:24.157 **************** 
수요일 10 9월 2025  09:59:39 +0900 (0:00:00.027)       0:00:24.184 **************** 

TASK [kubernetes/preinstall : Create systemd-resolved drop-in directory] *******
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:40 +0900 (0:00:00.326)       0:00:24.510 **************** 

TASK [kubernetes/preinstall : Write Kubespray DNS settings to systemd-resolved] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:40 +0900 (0:00:00.759)       0:00:25.270 **************** 
수요일 10 9월 2025  09:59:40 +0900 (0:00:00.032)       0:00:25.302 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.027)       0:00:25.330 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.026)       0:00:25.357 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.067)       0:00:25.424 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.026)       0:00:25.450 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.026)       0:00:25.476 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.026)       0:00:25.503 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.025)       0:00:25.528 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.026)       0:00:25.555 **************** 
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.024)       0:00:25.580 **************** 

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
ok: [node1] => (item=ipv4-ip_forward.conf)
ok: [node2] => (item=ipv4-ip_forward.conf)
ok: [node3] => (item=ipv4-ip_forward.conf)
ok: [node2] => (item=bridge-nf-call.conf)
ok: [node1] => (item=bridge-nf-call.conf)
ok: [node3] => (item=bridge-nf-call.conf)
수요일 10 9월 2025  09:59:41 +0900 (0:00:00.589)       0:00:26.170 **************** 

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:42 +0900 (0:00:00.308)       0:00:26.478 **************** 

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:42 +0900 (0:00:00.125)       0:00:26.604 **************** 

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:42 +0900 (0:00:00.317)       0:00:26.921 **************** 

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:59:42 +0900 (0:00:00.374)       0:00:27.295 **************** 
수요일 10 9월 2025  09:59:43 +0900 (0:00:00.045)       0:00:27.341 **************** 

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:43 +0900 (0:00:00.302)       0:00:27.643 **************** 
수요일 10 9월 2025  09:59:43 +0900 (0:00:00.044)       0:00:27.688 **************** 

TASK [kubernetes/preinstall : Ensure kubelet expected parameters are set] ******
ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node2] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node3] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [node2] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node3] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [node3] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node2] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node3] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node2] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node2] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node3] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node2] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [node3] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
수요일 10 9월 2025  09:59:45 +0900 (0:00:01.752)       0:00:29.441 **************** 

TASK [kubernetes/preinstall : Check dummy module] ******************************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  09:59:45 +0900 (0:00:00.404)       0:00:29.845 **************** 
수요일 10 9월 2025  09:59:45 +0900 (0:00:00.082)       0:00:29.928 **************** 

TASK [kubernetes/preinstall : Disable fapolicyd service] ***********************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.515)       0:00:30.443 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.039)       0:00:30.483 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.030)       0:00:30.513 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.028)       0:00:30.541 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.025)       0:00:30.567 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.025)       0:00:30.593 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.025)       0:00:30.618 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.025)       0:00:30.644 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.067)       0:00:30.711 **************** 

TASK [kubernetes/preinstall : Hosts | create hosts list from inventory] ********
ok: [node1 -> localhost]
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.043)       0:00:30.755 **************** 

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.349)       0:00:31.105 **************** 
수요일 10 9월 2025  09:59:46 +0900 (0:00:00.035)       0:00:31.140 **************** 

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:47 +0900 (0:00:00.305)       0:00:31.445 **************** 

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
ok: [node1] => (item=127.0.0.1 localhost)
ok: [node2] => (item=127.0.0.1 localhost)
ok: [node1] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node3] => (item=127.0.0.1 localhost)
ok: [node2] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain ubuntu2204.localdomain)
ok: [node3] => (item=::1 ip6-loopback localhost6 ip6-localhost localhost6.localdomain)
ok: [node2] => (item=127.0.0.1 localhost localhost.localdomain ubuntu2204.localdomain)
ok: [node3] => (item=127.0.0.1 localhost localhost.localdomain ubuntu2204.localdomain)
수요일 10 9월 2025  09:59:47 +0900 (0:00:00.086)       0:00:31.532 **************** 

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
수요일 10 9월 2025  09:59:47 +0900 (0:00:00.042)       0:00:31.574 **************** 

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
changed: [node3] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost', 'ubuntu2204.localdomain']})
changed: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost', 'ubuntu2204.localdomain']})
changed: [node2] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost', 'ubuntu2204.localdomain']})
changed: [node3] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
changed: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
changed: [node2] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
수요일 10 9월 2025  09:59:48 +0900 (0:00:00.731)       0:00:32.306 **************** 

TASK [kubernetes/preinstall : Update facts] ************************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:48 +0900 (0:00:00.723)       0:00:33.030 **************** 

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  09:59:49 +0900 (0:00:00.374)       0:00:33.404 **************** 

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  09:59:49 +0900 (0:00:00.802)       0:00:34.207 **************** 
수요일 10 9월 2025  09:59:49 +0900 (0:00:00.040)       0:00:34.248 **************** 
수요일 10 9월 2025  09:59:49 +0900 (0:00:00.029)       0:00:34.278 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.027)       0:00:34.305 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.003)       0:00:34.308 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.002)       0:00:34.311 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.002)       0:00:34.314 **************** 

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.303)       0:00:34.617 **************** 

TASK [Run calico checks] *******************************************************
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.154)       0:00:34.771 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.025)       0:00:34.797 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.024)       0:00:34.821 **************** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.024)       0:00:34.846 **************** 

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.025)       0:00:34.872 **************** 

TASK [network_plugin/calico : Check if calicoctl.sh exists] ********************
ok: [node1]
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.281)       0:00:35.154 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.027)       0:00:35.181 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.018)       0:00:35.199 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.017)       0:00:35.216 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.020)       0:00:35.237 **************** 
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.014)       0:00:35.251 **************** 

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.025)       0:00:35.276 **************** 

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:50 +0900 (0:00:00.023)       0:00:35.300 **************** 

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.025)       0:00:35.325 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.013)       0:00:35.339 **************** 

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.024)       0:00:35.364 **************** 

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [node1]
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.292)       0:00:35.657 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.034)       0:00:35.691 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.024)       0:00:35.716 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.020)       0:00:35.736 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.020)       0:00:35.756 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.018)       0:00:35.775 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.014)       0:00:35.789 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.103)       0:00:35.893 **************** 
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.036)       0:00:35.929 **************** 

TASK [container-engine/validate-container-engine : Validate-container-engine | check if fedora coreos] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.300)       0:00:36.230 **************** 

TASK [container-engine/validate-container-engine : Validate-container-engine | set is_ostree] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  09:59:51 +0900 (0:00:00.047)       0:00:36.277 **************** 

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  09:59:52 +0900 (0:00:00.301)       0:00:36.579 **************** 

TASK [container-engine/validate-container-engine : Populate service facts] *****
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:00 +0900 (0:00:08.353)       0:00:44.932 **************** 

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.434)       0:00:45.367 **************** 

TASK [container-engine/validate-container-engine : Check if docker is installed] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.342)       0:00:45.710 **************** 

TASK [container-engine/validate-container-engine : Check if crio is installed] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.339)       0:00:46.049 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.034)       0:00:46.084 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.027)       0:00:46.112 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.069)       0:00:46.182 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.023)       0:00:46.206 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.046)       0:00:46.252 **************** 
수요일 10 9월 2025  10:00:01 +0900 (0:00:00.024)       0:00:46.277 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.303 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.023)       0:00:46.327 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.023)       0:00:46.351 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:46.376 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.030)       0:00:46.406 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.032)       0:00:46.439 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.465 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:46.489 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.023)       0:00:46.513 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.031)       0:00:46.544 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:46.569 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.040)       0:00:46.610 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:46.635 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:46.659 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:46.685 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.712 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.045)       0:00:46.757 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.784 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:46.808 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:46.834 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:46.859 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.029)       0:00:46.888 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.915 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:46.940 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.026)       0:00:46.967 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.028)       0:00:46.995 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:47.019 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.039)       0:00:47.058 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.070)       0:00:47.129 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:47.154 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:47.180 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.025)       0:00:47.205 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.032)       0:00:47.238 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.031)       0:00:47.269 **************** 
수요일 10 9월 2025  10:00:02 +0900 (0:00:00.024)       0:00:47.294 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.024)       0:00:47.319 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.027)       0:00:47.346 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.024)       0:00:47.370 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.031)       0:00:47.402 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.429 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.455 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.025)       0:00:47.481 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.024)       0:00:47.505 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.531 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.025)       0:00:47.557 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.025)       0:00:47.582 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.028)       0:00:47.611 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.027)       0:00:47.638 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.665 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.030)       0:00:47.695 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.722 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.039)       0:00:47.761 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.027)       0:00:47.788 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.024)       0:00:47.813 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.024)       0:00:47.838 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.028)       0:00:47.866 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.026)       0:00:47.893 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.028)       0:00:47.921 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.031)       0:00:47.953 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.025)       0:00:47.979 **************** 
수요일 10 9월 2025  10:00:03 +0900 (0:00:00.025)       0:00:48.004 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.396)       0:00:48.400 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.026)       0:00:48.426 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.031)       0:00:48.458 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.484 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.031)       0:00:48.515 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:48.540 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.031)       0:00:48.571 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.030)       0:00:48.602 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.628 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:48.652 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:48.676 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.702 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.031)       0:00:48.734 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.759 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.785 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.028)       0:00:48.813 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:48.838 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:48.863 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.026)       0:00:48.889 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.023)       0:00:48.912 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.023)       0:00:48.936 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.023)       0:00:48.960 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.022)       0:00:48.983 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.007 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.022)       0:00:49.030 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.028)       0:00:49.059 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:49.085 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.109 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.134 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.159 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.183 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.025)       0:00:49.209 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.234 **************** 
수요일 10 9월 2025  10:00:04 +0900 (0:00:00.024)       0:00:49.258 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.066)       0:00:49.325 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.024)       0:00:49.349 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.023)       0:00:49.373 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.031)       0:00:49.404 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.024)       0:00:49.428 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.026)       0:00:49.455 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.022)       0:00:49.477 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.023)       0:00:49.501 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.026)       0:00:49.527 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.027)       0:00:49.554 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.025)       0:00:49.580 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.024)       0:00:49.605 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.030)       0:00:49.635 **************** 

TASK [container-engine/containerd-common : Containerd-common | check if fedora coreos] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.300)       0:00:49.935 **************** 

TASK [container-engine/containerd-common : Containerd-common | set is_ostree] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.045)       0:00:49.981 **************** 
수요일 10 9월 2025  10:00:05 +0900 (0:00:00.047)       0:00:50.029 **************** 

TASK [container-engine/runc : Runc | check if fedora coreos] *******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:06 +0900 (0:00:00.301)       0:00:50.330 **************** 

TASK [container-engine/runc : Runc | set is_ostree] ****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:06 +0900 (0:00:00.047)       0:00:50.378 **************** 

TASK [container-engine/runc : Runc | Uninstall runc package managed by package manager] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:07 +0900 (0:00:01.068)       0:00:51.447 **************** 

TASK [container-engine/runc : Runc | Download runc binary] *********************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:07 +0900 (0:00:00.053)       0:00:51.500 **************** 

TASK [container-engine/runc : Prep_download | Set a few facts] *****************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:07 +0900 (0:00:00.160)       0:00:51.661 **************** 
수요일 10 9월 2025  10:00:07 +0900 (0:00:00.031)       0:00:51.693 **************** 

TASK [container-engine/runc : Download_file | Set pathname of cached file] *****
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:07 +0900 (0:00:00.278)       0:00:51.972 **************** 

TASK [container-engine/runc : Download_file | Create dest directory on node] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:08 +0900 (0:00:00.683)       0:00:52.655 **************** 
수요일 10 9월 2025  10:00:08 +0900 (0:00:00.021)       0:00:52.677 **************** 
수요일 10 9월 2025  10:00:08 +0900 (0:00:00.021)       0:00:52.699 **************** 

TASK [container-engine/runc : Download_file | Download item] *******************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  10:00:10 +0900 (0:00:01.773)       0:00:54.472 **************** 
수요일 10 9월 2025  10:00:10 +0900 (0:00:00.034)       0:00:54.507 **************** 
수요일 10 9월 2025  10:00:10 +0900 (0:00:00.029)       0:00:54.536 **************** 
수요일 10 9월 2025  10:00:10 +0900 (0:00:00.026)       0:00:54.562 **************** 

TASK [container-engine/runc : Download_file | Extract file archives] ***********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:10 +0900 (0:00:00.039)       0:00:54.602 **************** 
수요일 10 9월 2025  10:00:10 +0900 (0:00:00.159)       0:00:54.761 **************** 

TASK [container-engine/runc : Copy runc binary from download dir] **************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.714)       0:00:55.475 **************** 

TASK [container-engine/runc : Runc | Remove orphaned binary] *******************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.334)       0:00:55.809 **************** 

TASK [container-engine/crictl : Install crictl] ********************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1, node2, node3
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.090)       0:00:55.900 **************** 

TASK [container-engine/crictl : Crictl | Download crictl] **********************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.040)       0:00:55.941 **************** 

TASK [container-engine/crictl : Prep_download | Set a few facts] ***************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.159)       0:00:56.100 **************** 
수요일 10 9월 2025  10:00:11 +0900 (0:00:00.030)       0:00:56.131 **************** 

TASK [container-engine/crictl : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:12 +0900 (0:00:00.280)       0:00:56.412 **************** 

TASK [container-engine/crictl : Download_file | Create dest directory on node] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:12 +0900 (0:00:00.680)       0:00:57.092 **************** 
수요일 10 9월 2025  10:00:12 +0900 (0:00:00.019)       0:00:57.112 **************** 
수요일 10 9월 2025  10:00:12 +0900 (0:00:00.014)       0:00:57.127 **************** 

TASK [container-engine/crictl : Download_file | Download item] *****************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:14 +0900 (0:00:01.789)       0:00:58.916 **************** 
수요일 10 9월 2025  10:00:14 +0900 (0:00:00.038)       0:00:58.955 **************** 
수요일 10 9월 2025  10:00:14 +0900 (0:00:00.031)       0:00:58.986 **************** 
수요일 10 9월 2025  10:00:14 +0900 (0:00:00.026)       0:00:59.013 **************** 

TASK [container-engine/crictl : Download_file | Extract file archives] *********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:14 +0900 (0:00:00.041)       0:00:59.055 **************** 

TASK [container-engine/crictl : Extract_file | Unpacking archive] **************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:17 +0900 (0:00:02.521)       0:01:01.576 **************** 

TASK [container-engine/crictl : Install crictl config] *************************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:18 +0900 (0:00:00.762)       0:01:02.339 **************** 

TASK [container-engine/crictl : Copy crictl binary from download dir] **********
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:18 +0900 (0:00:00.630)       0:01:02.970 **************** 

TASK [container-engine/nerdctl : Nerdctl | Download nerdctl] *******************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:18 +0900 (0:00:00.043)       0:01:03.013 **************** 

TASK [container-engine/nerdctl : Prep_download | Set a few facts] **************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:18 +0900 (0:00:00.161)       0:01:03.175 **************** 
수요일 10 9월 2025  10:00:18 +0900 (0:00:00.033)       0:01:03.208 **************** 

TASK [container-engine/nerdctl : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:19 +0900 (0:00:00.280)       0:01:03.488 **************** 

TASK [container-engine/nerdctl : Download_file | Create dest directory on node] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:19 +0900 (0:00:00.679)       0:01:04.168 **************** 
수요일 10 9월 2025  10:00:19 +0900 (0:00:00.023)       0:01:04.191 **************** 
수요일 10 9월 2025  10:00:19 +0900 (0:00:00.017)       0:01:04.209 **************** 

TASK [container-engine/nerdctl : Download_file | Download item] ****************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  10:00:21 +0900 (0:00:01.673)       0:01:05.883 **************** 
수요일 10 9월 2025  10:00:21 +0900 (0:00:00.034)       0:01:05.917 **************** 
수요일 10 9월 2025  10:00:21 +0900 (0:00:00.028)       0:01:05.945 **************** 
수요일 10 9월 2025  10:00:21 +0900 (0:00:00.026)       0:01:05.971 **************** 

TASK [container-engine/nerdctl : Download_file | Extract file archives] ********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:21 +0900 (0:00:00.040)       0:01:06.012 **************** 

TASK [container-engine/nerdctl : Extract_file | Unpacking archive] *************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:24 +0900 (0:00:02.369)       0:01:08.381 **************** 

TASK [container-engine/nerdctl : Nerdctl | Copy nerdctl binary from download dir] ***
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:24 +0900 (0:00:00.569)       0:01:08.951 **************** 

TASK [container-engine/nerdctl : Nerdctl | Create configuration dir] ***********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:24 +0900 (0:00:00.312)       0:01:09.264 **************** 

TASK [container-engine/nerdctl : Nerdctl | Install nerdctl configuration] ******
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  10:00:25 +0900 (0:00:00.759)       0:01:10.023 **************** 

TASK [container-engine/containerd : Containerd | Download containerd] **********
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:25 +0900 (0:00:00.042)       0:01:10.065 **************** 

TASK [container-engine/containerd : Prep_download | Set a few facts] ***********
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:25 +0900 (0:00:00.228)       0:01:10.293 **************** 
수요일 10 9월 2025  10:00:26 +0900 (0:00:00.031)       0:01:10.324 **************** 

TASK [container-engine/containerd : Download_file | Set pathname of cached file] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:26 +0900 (0:00:00.280)       0:01:10.605 **************** 

TASK [container-engine/containerd : Download_file | Create dest directory on node] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:26 +0900 (0:00:00.670)       0:01:11.275 **************** 
수요일 10 9월 2025  10:00:26 +0900 (0:00:00.019)       0:01:11.295 **************** 
수요일 10 9월 2025  10:00:27 +0900 (0:00:00.018)       0:01:11.313 **************** 

TASK [container-engine/containerd : Download_file | Download item] *************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:28 +0900 (0:00:01.742)       0:01:13.055 **************** 
수요일 10 9월 2025  10:00:28 +0900 (0:00:00.036)       0:01:13.092 **************** 
수요일 10 9월 2025  10:00:28 +0900 (0:00:00.027)       0:01:13.119 **************** 
수요일 10 9월 2025  10:00:28 +0900 (0:00:00.028)       0:01:13.148 **************** 

TASK [container-engine/containerd : Download_file | Extract file archives] *****
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:28 +0900 (0:00:00.039)       0:01:13.187 **************** 
수요일 10 9월 2025  10:00:29 +0900 (0:00:00.159)       0:01:13.346 **************** 

TASK [container-engine/containerd : Containerd | Unpack containerd archive] ****
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:32 +0900 (0:00:03.128)       0:01:16.475 **************** 

TASK [container-engine/containerd : Containerd | Generate systemd service for containerd] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:32 +0900 (0:00:00.741)       0:01:17.216 **************** 

TASK [container-engine/containerd : Containerd | Ensure containerd directories exist] ***
ok: [node1] => (item=/etc/systemd/system/containerd.service.d)
ok: [node2] => (item=/etc/systemd/system/containerd.service.d)
ok: [node3] => (item=/etc/systemd/system/containerd.service.d)
ok: [node1] => (item=/etc/containerd)
ok: [node2] => (item=/etc/containerd)
ok: [node3] => (item=/etc/containerd)
ok: [node2] => (item=/var/lib/containerd)
ok: [node1] => (item=/var/lib/containerd)
ok: [node3] => (item=/var/lib/containerd)
ok: [node2] => (item=/run/containerd)
ok: [node3] => (item=/run/containerd)
ok: [node1] => (item=/run/containerd)
수요일 10 9월 2025  10:00:34 +0900 (0:00:01.179)       0:01:18.396 **************** 
수요일 10 9월 2025  10:00:34 +0900 (0:00:00.040)       0:01:18.437 **************** 

TASK [container-engine/containerd : Containerd | Generate default base_runtime_spec] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:34 +0900 (0:00:00.349)       0:01:18.786 **************** 

TASK [container-engine/containerd : Containerd | Store generated default base_runtime_spec] ***
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:34 +0900 (0:00:00.047)       0:01:18.833 **************** 

TASK [container-engine/containerd : Containerd | Write base_runtime_specs] *****
ok: [node3] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [node2] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.0', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
수요일 10 9월 2025  10:00:35 +0900 (0:00:00.712)       0:01:19.546 **************** 

TASK [container-engine/containerd : Containerd | Copy containerd config file] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:36 +0900 (0:00:00.760)       0:01:20.306 **************** 

TASK [container-engine/containerd : Containerd | Create registry directories] ***
ok: [node2] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node3] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node1] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
수요일 10 9월 2025  10:00:36 +0900 (0:00:00.321)       0:01:20.627 **************** 

TASK [container-engine/containerd : Containerd | Write hosts.toml file] ********
ok: [node3] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node1] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
ok: [node2] => (item={'prefix': 'docker.io', 'mirrors': [{'host': 'https://registry-1.docker.io', 'capabilities': ['pull', 'resolve'], 'skip_verify': False}]})
수요일 10 9월 2025  10:00:37 +0900 (0:00:00.741)       0:01:21.369 **************** 
수요일 10 9월 2025  10:00:37 +0900 (0:00:00.008)       0:01:21.377 **************** 
수요일 10 9월 2025  10:00:37 +0900 (0:00:00.006)       0:01:21.383 **************** 
수요일 10 9월 2025  10:00:37 +0900 (0:00:00.005)       0:01:21.389 **************** 

TASK [container-engine/containerd : Containerd | Ensure containerd is started and enabled] ***
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:38 +0900 (0:00:01.008)       0:01:22.398 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.032)       0:01:22.430 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.455 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.044)       0:01:22.500 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.525 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.023)       0:01:22.549 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.041)       0:01:22.590 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.023)       0:01:22.614 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.023)       0:01:22.638 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.664 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.689 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.715 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.027)       0:01:22.742 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.026)       0:01:22.769 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:22.795 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.070)       0:01:22.865 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:22.890 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.026)       0:01:22.916 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.028)       0:01:22.944 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:22.968 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.031)       0:01:23.000 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:23.024 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.004)       0:01:23.029 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.005)       0:01:23.034 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.004)       0:01:23.038 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.023)       0:01:23.062 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:23.087 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:23.112 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:23.137 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:23.163 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.024)       0:01:23.188 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:23.213 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.025)       0:01:23.238 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.004)       0:01:23.243 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.004)       0:01:23.247 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.004)       0:01:23.252 **************** 
수요일 10 9월 2025  10:00:38 +0900 (0:00:00.031)       0:01:23.284 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.025)       0:01:23.310 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.024)       0:01:23.335 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.027)       0:01:23.362 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.005)       0:01:23.368 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.004)       0:01:23.372 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.016)       0:01:23.389 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.035)       0:01:23.425 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.016)       0:01:23.441 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.016)       0:01:23.457 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.033)       0:01:23.491 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.029)       0:01:23.521 **************** 

TASK [download : Prep_download | Register docker images info] ******************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.384)       0:01:23.905 **************** 

TASK [download : Prep_download | Create staging directory on remote node] ******
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.321)       0:01:24.227 **************** 
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.027)       0:01:24.255 **************** 

TASK [download : Download | Get kubeadm binary and list of required images] ****
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1, node2, node3
수요일 10 9월 2025  10:00:39 +0900 (0:00:00.047)       0:01:24.302 **************** 

TASK [download : Prep_kubeadm_images | Download kubeadm binary] ****************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:40 +0900 (0:00:00.286)       0:01:24.588 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:40 +0900 (0:00:00.160)       0:01:24.749 **************** 
수요일 10 9월 2025  10:00:40 +0900 (0:00:00.029)       0:01:24.778 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:40 +0900 (0:00:00.278)       0:01:25.057 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:41 +0900 (0:00:00.662)       0:01:25.719 **************** 
수요일 10 9월 2025  10:00:41 +0900 (0:00:00.013)       0:01:25.733 **************** 
수요일 10 9월 2025  10:00:41 +0900 (0:00:00.018)       0:01:25.751 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  10:00:43 +0900 (0:00:01.939)       0:01:27.691 **************** 
수요일 10 9월 2025  10:00:43 +0900 (0:00:00.034)       0:01:27.725 **************** 
수요일 10 9월 2025  10:00:43 +0900 (0:00:00.027)       0:01:27.752 **************** 
수요일 10 9월 2025  10:00:43 +0900 (0:00:00.028)       0:01:27.780 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:43 +0900 (0:00:00.040)       0:01:27.821 **************** 
수요일 10 9월 2025  10:00:43 +0900 (0:00:00.156)       0:01:27.977 **************** 

TASK [download : Prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:44 +0900 (0:00:00.891)       0:01:28.868 **************** 

TASK [download : Prep_kubeadm_images | Create kubeadm config] ******************
ok: [node3]
ok: [node2]
ok: [node1]
수요일 10 9월 2025  10:00:45 +0900 (0:00:00.808)       0:01:29.676 **************** 

TASK [download : Prep_kubeadm_images | Generate list of required images] *******
ok: [node1]
수요일 10 9월 2025  10:00:45 +0900 (0:00:00.392)       0:01:30.069 **************** 

TASK [download : Prep_kubeadm_images | Parse list of images] *******************
ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.32.8)
ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.32.8)
수요일 10 9월 2025  10:00:45 +0900 (0:00:00.054)       0:01:30.123 **************** 

TASK [download : Prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [node1]
수요일 10 9월 2025  10:00:45 +0900 (0:00:00.023)       0:01:30.146 **************** 

TASK [download : Download | Download files / images] ***************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'dest': '/tmp/releases/etcd-3.5.22-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.22', 'checksum': 'sha256:20174ab70a6f3df94da13ecac4610f42c47d25af82426f21c112c2c841ec499a', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.22/etcd-v3.5.22-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/cni-plugins-linux-amd64-1.4.1.tgz', 'checksum': 'sha256:2a0ea7072d1806b8526489bcd3b4847a06ab010ee32ba3c3d4e5a3235d3eb138', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.4.1/cni-plugins-linux-amd64-v1.4.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubeadm-1.32.8-amd64', 'checksum': 'sha256:da4cc996800db14f82fce8813caa55be318e52ef69d82e50e728ef4cfa18b69f', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubelet-1.32.8-amd64', 'checksum': 'sha256:7dfca4da9cdf592c0f70800e09fb42553765bc0951cade3d6e0c571daf3f23ee', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubectl-1.32.8-amd64', 'checksum': 'sha256:0fc709a8262be523293a18965771fedfba7466eda7ab4337feaa5c028aa46b1b', 'url': 'https://dl.k8s.io/release/v1.32.8/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/crictl-1.32.0-linux-amd64.tar.gz', 'checksum': 'sha256:f050b71d3a73a91a4e0990b90143ed04dcd100cc66f953736fcb6a2730e283c4', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.32.0/crictl-v1.32.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/runc-1.2.6.amd64', 'checksum': 'sha256:0774f49d1b1eebb5849e644db5e4dc6f2b06cee05f13b3d17d5d6ba62d6f2ebc', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.2.6/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/containerd-2.0.6-linux-amd64.tar.gz', 'checksum': 'sha256:a545471a67b8508a3c58ad01a4e6bb2921ace1e59e00a0a2d2e784c1f4fa8caa', 'url': 'https://github.com/containerd/containerd/releases/download/v2.0.6/containerd-2.0.6-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/nerdctl-2.0.5-linux-amd64.tar.gz', 'checksum': 'sha256:a029af80fd4b3de096d1a18779e7ff8369fbd1285944ebc50bdd22ad41438b5d', 'url': 'https://github.com/containerd/nerdctl/releases/download/v2.0.5/nerdctl-2.0.5-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/calicoctl-3.29.5-amd64', 'checksum': 'sha256:0b118c7efa08e84751a6c7f6647d61ecac58793343d949ad75b71a1d55480a9c', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.29.5/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.29.5', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/calico-3.29.5-kdd-crds/3.29.5.tar.gz', 'checksum': 'sha256:f36d0b31aaa34f648b211d16f864f262e4700aad30ab0889b327d31c115b6a42', 'url': 'https://github.com/projectcalico/calico/archive/v3.29.5.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.10', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.27.4-alpine', 'checksum': '', 'groups': ['kube_node']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.11.3', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.25.0', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'checksum': '', 'groups': ['kube_control_plane']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.32.8', 'groups': ['k8s_cluster']}})
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.516)       0:01:30.663 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.032)       0:01:30.695 **************** 
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.025)       0:01:30.721 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.031)       0:01:30.752 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node2]
ok: [node1]
ok: [node3]
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.310)       0:01:31.062 **************** 
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.021)       0:01:31.084 **************** 
수요일 10 9월 2025  10:00:46 +0900 (0:00:00.019)       0:01:31.104 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node3]
ok: [node1]
ok: [node2]
수요일 10 9월 2025  10:00:47 +0900 (0:00:00.491)       0:01:31.595 **************** 
수요일 10 9월 2025  10:00:47 +0900 (0:00:00.035)       0:01:31.631 **************** 
수요일 10 9월 2025  10:00:47 +0900 (0:00:00.028)       0:01:31.659 **************** 
수요일 10 9월 2025  10:00:47 +0900 (0:00:00.025)       0:01:31.685 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:47 +0900 (0:00:00.085)       0:01:31.770 **************** 

TASK [download : Extract_file | Unpacking archive] *****************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:49 +0900 (0:00:02.165)       0:01:33.935 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:49 +0900 (0:00:00.040)       0:01:33.976 **************** 
수요일 10 9월 2025  10:00:49 +0900 (0:00:00.025)       0:01:34.001 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:49 +0900 (0:00:00.031)       0:01:34.032 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.353)       0:01:34.386 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.025)       0:01:34.411 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.019)       0:01:34.431 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.580)       0:01:35.012 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.036)       0:01:35.049 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.025)       0:01:35.075 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.026)       0:01:35.101 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.040)       0:01:35.141 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.031)       0:01:35.172 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.034)       0:01:35.207 **************** 
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.024)       0:01:35.232 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:50 +0900 (0:00:00.035)       0:01:35.267 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node2]
ok: [node3]
ok: [node1]
수요일 10 9월 2025  10:00:51 +0900 (0:00:00.302)       0:01:35.570 **************** 
수요일 10 9월 2025  10:00:51 +0900 (0:00:00.019)       0:01:35.589 **************** 
수요일 10 9월 2025  10:00:51 +0900 (0:00:00.015)       0:01:35.605 **************** 

TASK [download : Download_file | Download item] ********************************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:51 +0900 (0:00:00.641)       0:01:36.247 **************** 
수요일 10 9월 2025  10:00:51 +0900 (0:00:00.039)       0:01:36.286 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.030)       0:01:36.317 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.027)       0:01:36.344 **************** 

TASK [download : Download_file | Extract file archives] ************************
included: /Users/xiilab/Develop/astrago/astrago-deployment/kubespray/versions/v2.28.1/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.045)       0:01:36.390 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.027)       0:01:36.417 **************** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.032)       0:01:36.449 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.027)       0:01:36.476 **************** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.032)       0:01:36.509 **************** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node3]
ok: [node2]
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.316)       0:01:36.825 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.024)       0:01:36.850 **************** 
수요일 10 9월 2025  10:00:52 +0900 (0:00:00.021)       0:01:36.871 **************** 
