# externalIP:
externalIP: 10.61.3.33

# Volume Settings
nfs:
  storageClassName: astrago-nfs-csi
  server: 10.61.3.2
  basePath: /kube_storage/develop-astrago

# GPU Process Exporter Settings
gpu-process-exporter:
  enabled: true
  collection:
    schedule: "*/1 * * * *" # Every minute
    image:
      repository: busybox
      tag: "1.35"
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 32Mi
  prometheus:
    serverService: prometheus-kube-prometheus-prometheus.prometheus.svc:9090
  gpu:
    count: 4
    devices: [0, 1, 2, 3]
  nodeSelector:
    nvidia.com/gpu.present: "true"
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule

# Keycloak Settings
keycloak:
  adminUser: admin
  adminPassword: xiirocks
  servicePort: 30001

# Astrago Settings
astrago:
  proxyUrl: https://10.61.3.33.nip.io
  servicePort: 30080
  userInitPassword: astrago
  
  # === TLS 인증서 설정 ===
  tls:
    secretName: "astrago-tls-secret"  # 사용할 TLS Secret 이름
  
  # === Ingress 설정 (Secret은 수동 생성) ===
  ingress:
    enabled: true
    className: "nginx"
    host: "10.61.3.33.nip.io"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      # 파일 업로드 용량 제한 (proxy-config.yaml의 client_max_body_size 0과 동일)
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      # 프록시 버퍼 설정 (proxy-config.yaml 참조)
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
      # 타임아웃 설정 (proxy-config.yaml의 긴 타임아웃과 동일)
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      # 대용량 헤더 지원
      nginx.ingress.kubernetes.io/large-client-header-buffers: "8 8k"
    tls:
      enabled: true  # astrago-tls-secret을 수동으로 생성해야 함
  
  # === Truststore 설정 (Secret은 수동 생성) ===  
  truststore:
    enabled: true  # astrago-truststore-cert를 수동으로 생성해야 함
  
  keycloak:
    externalKeycloakUrl:
    realm: astrago
    client: astrago-client
    clientSecret: astragosecret
    userInitPassword: astrago
  mariadb:
    rootPassword: root
    username: astrago
    password: xiirocks
    maxLifetime: "3595000"
  mongodb:
    url: mongodb://astrago:xiirocks@astrago-mongodb:27017/astrago?authSource=admin
  core:
    registry: "docker.io"
    repository: "xiilab/astrago"
    imageTag: "core-stag-7746"
  batch:
    registry: "docker.io"
    repository: "xiilab/astrago"
    imageTag: "batch-stag-7746"
  monitor:
    registry: "docker.io"
    repository: "xiilab/astrago"
    imageTag: "monitor-stag-7746"
  frontend:
    registry: "docker.io"
    repository: "xiilab/astrago"
    imageTag: "frontend-stag-9cd6"
  oneview:
    enabled: true

harbor:
  enabled: true
  servicePort: 30002
  adminPassword: Harbor12345

offline:
  registry: # 192.168.56.11:35000
  httpServer: # http://192.168.56.11
