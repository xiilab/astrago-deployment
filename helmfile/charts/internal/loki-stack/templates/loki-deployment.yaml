apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki-stack.fullname" . }}-loki
  namespace: {{ .Release.Namespace }}
  labels:
    app: loki
    component: loki
spec:
  replicas: {{ .Values.loki.replicas | default 1 }}
  selector:
    matchLabels:
      app: loki
      component: loki
  template:
    metadata:
      labels:
        app: loki
        component: loki
    spec:
      containers:
      - name: loki
        image: {{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}
        imagePullPolicy: {{ .Values.loki.image.pullPolicy | default "IfNotPresent" }}
        args:
          - -config.file=/etc/loki/loki.yaml
        ports:
        - containerPort: 3100
          name: http
        env:
        - name: LOKI_CONFIG_FILE
          value: /etc/loki/loki.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/loki
        - name: storage
          mountPath: /loki
        resources:
          {{- toYaml .Values.loki.resources | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "loki-stack.fullname" . }}-loki-config
      - name: storage
        {{- if .Values.loki.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "loki-stack.fullname" . }}-loki-storage
        {{- else }}
        emptyDir: {}
        {{- end }} 