global:
  imageRegistry: "{{ .Values.offline.registry | default "" }}"
  {{- if hasKey .Values.astrago "global" }}
  {{- if hasKey .Values.astrago.global "imagePullSecrets" }}
  imagePullSecrets:
    {{- toYaml .Values.astrago.global.imagePullSecrets | nindent 4 }}
  {{- end }}
  {{- end }}

core:
  replicaCount: 3
  image:
    registry: "{{ .Values.astrago.imageDefaults.registry }}"
    repository: "{{ .Values.astrago.imageDefaults.repository }}"
    tag: "{{ .Values.astrago.components.core.tag }}"
    pullPolicy: "{{ .Values.astrago.imageDefaults.pullPolicy }}"
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
    - name: PROMETHEUS_URL
      value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
    - name: ASTRAGO_PRIVATE-REGISTRY-URL
      value: "{{ .Values.offline.registry | default "" }}" 
    - name: HARBOR_URL
      value: "harbor.harbor.svc.cluster.local"
    - name: HARBOR_ID
      value: "admin"
    - name: HARBOR_PASSWORD
      value: "{{ .Values.harbor.adminPassword | default "Harbor12345" }}"
    {{- if eq .Values.externalAccess.mode "domain" }}
    - name: ASTRAGO_INGRESS_DEFAULT_HOST
      value: "{{ .Values.externalAccess.domain.name }}"
    {{- else }}
    - name: ASTRAGO_INGRESS_DEFAULT_HOST
      value: ""
    {{- end }}
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "10"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "30"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
batch:
  image:
    registry: "{{ .Values.astrago.imageDefaults.registry }}"
    repository: "{{ .Values.astrago.imageDefaults.repository }}"
    tag: "{{ .Values.astrago.components.batch.tag }}"
    pullPolicy: "{{ .Values.astrago.imageDefaults.pullPolicy }}"
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "5"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "20"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: ADMIN_INIT-PASSWORD
      value: {{ .Values.astrago.userInitPassword }}
    - name: ASTRAGO_PRIVATE-REGISTRY-URL
      value: "{{ .Values.offline.registry | default "" }}"
    - name: HARBOR_URL
      value: "harbor.harbor.svc.cluster.local"
    - name: HARBOR_ID
      value: "admin"
    - name: HARBOR_PASSWORD
      value: "{{ .Values.harbor.adminPassword | default "Harbor12345" }}"

monitor:
  image:
    registry: "{{ .Values.astrago.imageDefaults.registry }}"
    repository: "{{ .Values.astrago.imageDefaults.repository }}"
    tag: "{{ .Values.astrago.components.monitor.tag }}"
    pullPolicy: "{{ .Values.astrago.imageDefaults.pullPolicy }}" 
  env:
    - name: SPRING_JPA_HIBERNATE_DDL-AUTO
      value: none
    - name: SPRING_DATASOURCE_URL
      value: jdbc:mariadb://astrago-mariadb:3306/astrago
    - name: SPRING_DATASOURCE_USERNAME
      value: {{ .Values.astrago.mariadb.username }}
    - name: SPRING_DATASOURCE_PASSWORD
      value: {{ .Values.astrago.mariadb.password }}
    - name: SPRING_DATASOURCE_HIKARI_MAX-LIFETIME
      value: {{ .Values.astrago.mariadb.maxLifetime | quote }}
    # HikariCP 연결 풀 최적화 설정
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT
      value: "30000"  # 30초
    - name: SPRING_DATASOURCE_HIKARI_IDLE-TIMEOUT
      value: "300000"  # 5분
    - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
      value: "3"
    - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
      value: "10"
    - name: SPRING_DATASOURCE_HIKARI_LEAK-DETECTION-THRESHOLD
      value: "60000"  # 1분
    - name: SPRING_DATASOURCE_HIKARI_VALIDATION-TIMEOUT
      value: "5000"   # 5초
    - name: SPRING_DATASOURCE_HIKARI_CONNECTION-TEST-QUERY
      value: "SELECT 1"
    - name: SPRING_MVC_PATHMATCH_MATCHING-STRATEGY
      value: ant_path_matcher
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_ISSUER-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}
    - name: SPRING_SECURITY_OAUTH2_RESOURCE-SERVER_JWT_JWK-SET-URI
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth/realms/{{ .Values.astrago.keycloak.realm }}/protocol/openid-connect/certs
    - name: KEYCLOAK_REALM
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_AUTH-SERVER-URL
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth
    - name: KEYCLOAK_RESOURCE
      value: {{ .Values.astrago.keycloak.client }}
    - name: ADMIN_NAME
      value: {{ .Values.keycloak.adminUser }}
    - name: ADMIN_PASSWORD
      value: {{ .Values.keycloak.adminPassword }}
    - name: PROMETHEUS_URL
      value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090

frontend:
  image:
    registry: "{{ .Values.astrago.imageDefaults.registry }}"
    repository: "{{ .Values.astrago.imageDefaults.repository }}"
    tag: "{{ .Values.astrago.components.frontend.tag }}"
    pullPolicy: "{{ .Values.astrago.imageDefaults.pullPolicy }}" 
  env:
    - name: KEYCLOAK_HOST
      value: {{ .Values.astrago.keycloak.baseUrl | default .Values.astrago.baseUrl }}/auth
    - name: KEYCLOAK_REALME
      value: {{ .Values.astrago.keycloak.realm }}
    - name: KEYCLOAK_CLIENT_ID
      value: {{ .Values.astrago.keycloak.client }}
    - name: AUTH_CLIENT_SECRET
      value: {{ .Values.astrago.keycloak.clientSecret }}
    - name: NODE_OPTIONS
      value: "--max-http-header-size=41960"
    - name: NEXTAUTH_URL
      value: {{ .Values.astrago.baseUrl }}
    - name: NEXTAUTH_SECRET
      value: uuNj1L0Yg2xKcBPVp7yOVlm2nigL3hoHOzbwQXAwx1I=
    - name: NEXT_PUBLIC_API_URL
      value: http://astrago-backend-core:8080
    - name: NEXT_PUBLIC_MONITOR_API_URL
      value: http://astrago-backend-monitor:8080
    - name: NEXT_PUBLIC_BATCH_API_URL
      value: http://astrago-backend-batch:8080
    - name: NEXT_PUBLIC_API_MOCKING
      value: disabled
    - name: NEXT_PUBLIC_WEBSOCKET_HOST
      value: http://astrago-backend-core:8080
    - name: NODE_TLS_REJECT_UNAUTHORIZED
      value: '0'    
    - name: NEXT_PUBLIC_ONEVIEW_ENABLED
      value: {{ .Values.astrago.oneview.enabled }} 
    - name : NEXT_PUBLIC_ONLYADMIN_ENABLE
      value: true

proxy:
  service:
    type: NodePort
    nodePort: {{ .Values.astrago.servicePort  }}

mariadb:
  auth:
    rootPassword: {{ .Values.astrago.mariadb.rootPassword }}
    database: astrago
    username: {{ .Values.astrago.mariadb.username }}
    password: {{ .Values.astrago.mariadb.password }}
  primary:
    service:
      type: NodePort
      nodePorts: 
        mysql: 30010
    persistence:
      storageClass: "{{ .Values.nfs.storageClassName }}"

    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      datadir=/bitnami/mariadb/data
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      long_query_time=10.0
      # 연결 최적화 설정
      interactive_timeout = 3600
      wait_timeout = 1800  # 30분으로 단축
      max_connections = 200  # 연결 수 제한
      connect_timeout = 30
      # 연결 풀 최적화
      thread_cache_size = 50
      query_cache_type = 1
      query_cache_size = 64M
      slow_query_log = 1

      #mysql logging
      log-bin=/opt/bitnami/mariadb/logs/mysql_bin
      #server-id=1
      binlog_format=STATEMENT
      expire_logs_days=7
      binlog_checksum=NONE
      binlog_row_image=FULL
      
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

# Ingress configuration - uses externalAccess for consistency
ingress:
  enabled: true  # Always create Ingress
  className: "nginx"
  {{- if eq .Values.externalAccess.mode "domain" }}
  host: {{ .Values.externalAccess.domain.name }}
  tls:
    enabled: {{ .Values.externalAccess.domain.tls.enabled }}
    secretName: {{ .Values.externalAccess.domain.tls.secretName }}
  {{- else }}
  # IP mode: no host specified (accessible from all IPs)
  host: ""
  tls:
    enabled: false
    secretName: ""
  {{- end }}
  annotations:
    # 기본 nginx annotation (항상 적용)
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/client-header-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    # cert-manager issuer annotation (도메인 모드 + TLS 활성화 시 자동 추가)
    {{- if and (eq .Values.externalAccess.mode "domain") .Values.externalAccess.domain.tls.enabled .Values.externalAccess.domain.tls.issuer }}
    cert-manager.io/cluster-issuer: {{ .Values.externalAccess.domain.tls.issuer | quote }}
    {{- end }}

nfs:
  size: 10Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.nfs.storageClassName }}
