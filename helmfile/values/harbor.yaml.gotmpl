# Harbor Configuration for Astrago
# Optimized for Docker image push/pull only

expose:
  # Use clusterIP - no Ingress created, access via Astrago Ingress later
  type: clusterIP
  tls:
    enabled: false

externalURL: http://harbor-core.harbor.svc.cluster.local

# Persistence - only for critical data
persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    # Registry: stores Docker image layers and manifests (REQUIRED)
    registry:
      storageClass: "{{ .Values.nfs.storageClassName }}"
      accessMode: ReadWriteOnce
      size: 5Gi
    # Database: stores metadata (projects, users, tags) (REQUIRED)
    database:
      storageClass: "{{ .Values.nfs.storageClassName }}"
      accessMode: ReadWriteOnce
      size: 1Gi
    # Redis: cache data (using PVC for StatefulSet compatibility)
    redis:
      storageClass: "{{ .Values.nfs.storageClassName }}"
      size: 1Gi

harborAdminPassword: "{{ .Values.harbor.adminPassword }}"

# Image repositories
nginx:
  image:
    repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/nginx-photon"
portal:
  image:
    repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/harbor-portal"
core:
  image:
    repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/harbor-core"
jobservice:
  image:
    repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/harbor-jobservice"
  # Store logs in database instead of PVC
  jobLoggers:
    - database
    - stdout
registry:
  registry:
    image:
      repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/registry-photon"
  controller:
    image:
      repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/harbor-registryctl"

# Database
database:
  type: internal
  internal:
    image:
      repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/harbor-db"

# Redis cache - no persistence needed (cache is ephemeral)
redis:
  type: internal
  internal:
    image:
      repository: "{{ .Values.offline.registry | default "docker.io" }}/goharbor/redis-photon"

# Disable optional components (not needed for basic push/pull)
trivy:
  enabled: false

metrics:
  enabled: false

chartmuseum:
  enabled: false

notary:
  enabled: false